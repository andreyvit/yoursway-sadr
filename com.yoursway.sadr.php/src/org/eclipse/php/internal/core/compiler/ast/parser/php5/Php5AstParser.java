
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sun Jul 06 14:54:53 IDT 2008
//----------------------------------------------------

package org.eclipse.php.internal.core.compiler.ast.parser.php5;

import java.util.*;
import org.eclipse.dltk.ast.*;
import org.eclipse.dltk.ast.declarations.*;
import org.eclipse.dltk.ast.expressions.*;
import org.eclipse.dltk.ast.references.*;
import org.eclipse.dltk.ast.statements.*;
import org.eclipse.php.internal.core.compiler.ast.nodes.*;
import org.eclipse.php.internal.core.compiler.ast.parser.*;

/** CUP v0.10k generated parser.
  * @version Sun Jul 06 14:54:53 IDT 2008
  */
public class Php5AstParser extends AbstractASTParser {

  /** Default constructor. */
  public Php5AstParser() {super();}

  /** Constructor which sets the default scanner. */
  public Php5AstParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0176\000\002\003\003\000\002\002\004\000\002\004" +
    "\004\000\002\004\002\000\002\005\003\000\002\005\003" +
    "\000\002\005\003\000\002\005\006\000\002\007\004\000" +
    "\002\007\002\000\002\010\003\000\002\010\003\000\002" +
    "\010\003\000\002\010\006\000\002\006\003\000\002\006" +
    "\003\000\002\006\003\000\002\160\002\000\002\011\006" +
    "\000\002\011\011\000\002\011\014\000\002\011\007\000" +
    "\002\011\011\000\002\011\013\000\002\011\007\000\002" +
    "\011\004\000\002\011\005\000\002\011\004\000\002\011" +
    "\005\000\002\011\004\000\002\011\005\000\002\011\005" +
    "\000\002\011\005\000\002\011\005\000\002\011\005\000" +
    "\002\011\003\000\002\011\004\000\002\011\005\000\002" +
    "\011\007\000\002\011\012\000\002\011\012\000\002\011" +
    "\007\000\002\011\003\000\002\011\017\000\002\011\005" +
    "\000\002\123\003\000\002\123\002\000\002\124\003\000" +
    "\002\124\004\000\002\125\012\000\002\012\003\000\002" +
    "\012\005\000\002\013\003\000\002\014\003\000\002\014" +
    "\005\000\002\120\003\000\002\121\003\000\002\045\002" +
    "\000\002\045\003\000\002\161\002\000\002\162\002\000" +
    "\002\126\013\000\002\156\005\000\002\156\003\000\002" +
    "\163\002\000\002\164\002\000\002\127\014\000\002\165" +
    "\002\000\002\127\011\000\002\157\003\000\002\157\002" +
    "\000\002\155\003\000\002\155\003\000\002\155\003\000" +
    "\002\130\003\000\002\130\004\000\002\130\004\000\002" +
    "\131\002\000\002\131\004\000\002\131\004\000\002\104" +
    "\003\000\002\105\002\000\002\105\004\000\002\132\002" +
    "\000\002\132\004\000\002\133\003\000\002\133\005\000" +
    "\002\133\005\000\002\133\003\000\002\015\002\000\002" +
    "\015\004\000\002\016\003\000\002\016\004\000\002\017" +
    "\003\000\002\017\006\000\002\020\003\000\002\020\006" +
    "\000\002\021\003\000\002\021\006\000\002\022\005\000" +
    "\002\022\007\000\002\023\005\000\002\023\006\000\002" +
    "\023\006\000\002\023\007\000\002\024\002\000\002\024" +
    "\007\000\002\024\006\000\002\025\003\000\002\025\003" +
    "\000\002\026\003\000\002\026\006\000\002\027\002\000" +
    "\002\027\010\000\002\030\002\000\002\030\011\000\002" +
    "\031\002\000\002\031\004\000\002\032\002\000\002\032" +
    "\005\000\002\033\003\000\002\033\002\000\002\034\003" +
    "\000\002\034\005\000\002\034\004\000\002\035\004\000" +
    "\002\035\005\000\002\035\006\000\002\035\007\000\002" +
    "\035\003\000\002\134\002\000\002\134\003\000\002\134" +
    "\003\000\002\036\003\000\002\036\002\000\002\037\003" +
    "\000\002\037\003\000\002\037\004\000\002\037\005\000" +
    "\002\037\005\000\002\037\006\000\002\040\005\000\002" +
    "\040\003\000\002\041\003\000\002\041\004\000\002\041" +
    "\006\000\002\042\005\000\002\042\007\000\002\042\003" +
    "\000\002\042\005\000\002\043\004\000\002\043\002\000" +
    "\002\044\005\000\002\044\004\000\002\166\002\000\002" +
    "\167\002\000\002\044\014\000\002\044\003\000\002\044" +
    "\003\000\002\113\003\000\002\113\005\000\002\113\002" +
    "\000\002\136\003\000\002\136\003\000\002\112\002\000" +
    "\002\112\003\000\002\114\003\000\002\114\004\000\002" +
    "\115\003\000\002\115\003\000\002\115\003\000\002\115" +
    "\003\000\002\115\003\000\002\115\003\000\002\110\005" +
    "\000\002\110\007\000\002\110\003\000\002\110\005\000" +
    "\002\111\007\000\002\111\006\000\002\046\005\000\002" +
    "\046\003\000\002\047\002\000\002\047\003\000\002\050" +
    "\005\000\002\050\003\000\002\051\010\000\002\051\005" +
    "\000\002\051\006\000\002\051\010\000\002\051\005\000" +
    "\002\051\004\000\002\051\005\000\002\051\005\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\005" +
    "\000\002\051\005\000\002\051\005\000\002\051\004\000" +
    "\002\051\004\000\002\051\004\000\002\051\004\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\005" +
    "\000\002\051\005\000\002\051\005\000\002\051\005\000" +
    "\002\051\005\000\002\051\005\000\002\051\005\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\004\000\002\051\004\000\002\051\004\000\002\051\004" +
    "\000\002\051\005\000\002\051\005\000\002\051\005\000" +
    "\002\051\005\000\002\051\005\000\002\051\005\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\007\000\002\051\003\000\002\051\004" +
    "\000\002\051\004\000\002\051\004\000\002\051\004\000" +
    "\002\051\004\000\002\051\004\000\002\051\004\000\002" +
    "\051\004\000\002\051\004\000\002\051\003\000\002\051" +
    "\006\000\002\051\005\000\002\051\004\000\002\052\006" +
    "\000\002\052\010\000\002\052\010\000\002\052\006\000" +
    "\002\107\003\000\002\145\003\000\002\145\003\000\002" +
    "\147\006\000\002\147\003\000\002\151\004\000\002\151" +
    "\002\000\002\152\004\000\002\053\002\000\002\053\004" +
    "\000\002\053\005\000\002\054\002\000\002\054\005\000" +
    "\002\055\003\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\003\000\002\055" +
    "\003\000\002\055\003\000\002\056\003\000\002\056\003" +
    "\000\002\056\004\000\002\056\004\000\002\056\006\000" +
    "\002\056\003\000\002\153\005\000\002\057\003\000\002" +
    "\057\003\000\002\057\003\000\002\057\003\000\002\057" +
    "\005\000\002\057\005\000\002\060\002\000\002\060\004" +
    "\000\002\061\002\000\002\061\003\000\002\062\007\000" +
    "\002\062\005\000\002\062\005\000\002\062\003\000\002" +
    "\063\003\000\002\063\003\000\002\135\003\000\002\106" +
    "\003\000\002\137\003\000\002\122\007\000\002\122\003" +
    "\000\002\117\004\000\002\117\002\000\002\141\005\000" +
    "\002\116\005\000\002\116\002\000\002\140\003\000\002" +
    "\140\004\000\002\142\005\000\002\154\003\000\002\154" +
    "\003\000\002\150\003\000\002\150\004\000\002\150\003" +
    "\000\002\064\006\000\002\064\006\000\002\064\003\000" +
    "\002\065\003\000\002\065\006\000\002\066\002\000\002" +
    "\066\003\000\002\067\003\000\002\067\003\000\002\070" +
    "\006\000\002\070\006\000\002\070\003\000\002\071\003" +
    "\000\002\071\005\000\002\072\003\000\002\072\004\000" +
    "\002\073\005\000\002\073\003\000\002\074\003\000\002" +
    "\074\006\000\002\074\002\000\002\075\002\000\002\075" +
    "\004\000\002\076\007\000\002\076\005\000\002\076\005" +
    "\000\002\076\003\000\002\076\010\000\002\076\006\000" +
    "\002\076\006\000\002\076\004\000\002\077\004\000\002" +
    "\077\004\000\002\077\002\000\002\100\003\000\002\100" +
    "\006\000\002\100\005\000\002\100\005\000\002\100\010" +
    "\000\002\100\005\000\002\101\003\000\002\101\003\000" +
    "\002\101\003\000\002\102\006\000\002\102\006\000\002" +
    "\102\004\000\002\102\004\000\002\102\006\000\002\102" +
    "\004\000\002\102\004\000\002\143\003\000\002\143\005" +
    "\000\002\146\005\000\002\144\003\000\002\103\003\000" +
    "\002\103\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02de\000\002\001\ufffe\000\004\002\u02e0\001\002\000" +
    "\222\003\115\004\140\005\152\006\106\007\012\010\034" +
    "\011\053\012\061\014\074\016\126\017\121\020\117\021" +
    "\043\023\033\025\101\027\151\032\103\034\127\040\055" +
    "\041\120\042\107\044\134\045\041\047\147\050\025\051" +
    "\011\053\076\054\142\055\030\056\057\057\032\060\137" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\100\064\103\023\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\134\010\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\204\042\205\062\206\017\212\145\215\100\216\112" +
    "\217\060\001\001\000\002\001\ufef0\000\004\212\u02dd\001" +
    "\002\000\002\001\uffd7\000\006\012\u02d2\215\u02d3\001\002" +
    "\000\002\001\ufef3\000\004\212\u02bd\001\002\000\002\001" +
    "\uff09\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\002\000\070\031\177\113\166\114\206\115\157\133" +
    "\163\134\u02bb\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\002\000\004\057\u01ff\001" +
    "\002\000\002\001\ufeef\000\002\001\ufec4\000\036\117\u012b" +
    "\120\u012f\121\u012c\122\u0135\123\u012e\124\u0134\125\u0131\126" +
    "\u0133\127\u012d\130\u012a\131\u0130\132\u0132\164\ufed3\165\ufed3" +
    "\001\ufed5\000\002\001\ufff2\000\002\001\uffc9\000\006\016" +
    "\u02b7\212\u02b6\001\002\000\132\004\140\006\106\007\012" +
    "\010\034\011\053\012\061\016\126\032\103\054\142\055" +
    "\030\065\144\066\013\067\020\070\045\071\047\072\130" +
    "\073\006\074\035\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\002\000\132\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\004\212\u02b0\001\002" +
    "\000\004\102\u02ae\001\002\000\002\001\uffb7\000\004\212" +
    "\u029d\001\002\000\004\102\uff01\001\ufe8d\000\002\001\ufea2" +
    "\000\002\001\ufec8\000\132\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\132\004\140\006\106\007\012" +
    "\010\034\011\053\012\061\016\126\032\103\054\142\055" +
    "\030\065\144\066\013\067\020\070\045\071\047\072\130" +
    "\073\006\074\035\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\002\000\004\100\u0282\001\002\000" +
    "\004\012\u01f6\001\002\000\004\212\u0279\001\002\000\002" +
    "\001\ufec7\000\002\001\ufeee\000\004\010\u026a\001\002\000" +
    "\002\001\ufeed\000\004\212\u0267\001\002\000\004\063\u025c" +
    "\001\ufed1\000\012\010\034\012\061\104\056\215\100\001" +
    "\002\000\002\001\ufee4\000\010\100\227\176\230\212\ufecb" +
    "\001\ufec6\000\134\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\134\u0258\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\002\001\ufe8c\000\004\212\u0255" +
    "\001\002\000\002\001\ufea2\000\002\001\ufe8e\000\004\057" +
    "\u01f0\001\002\000\132\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\212\145\215\100\216\112" +
    "\217\060\001\002\000\002\001\ufff0\000\002\001\uff13\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\002\000\006\012\061\215\243\001\002\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\002" +
    "\001\ufee3\000\002\001\uffde\000\010\010\225\012\061\215" +
    "\100\001\002\000\004\212\u0240\001\002\000\006\164\u023e" +
    "\165\u023f\001\002\000\004\100\244\001\ufeb5\000\004\212" +
    "\u0227\001\002\000\002\001\ufffc\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\002\001" +
    "\ufef4\000\004\141\u01c4\001\uffc8\000\002\001\ufee2\000\002" +
    "\001\ufff3\000\002\001\ufea2\000\002\001\ufec0\000\004\010" +
    "\u01a2\001\002\000\002\001\ufff1\000\002\001\ufec1\000\206" +
    "\003\115\004\140\005\152\006\106\007\012\010\034\011" +
    "\053\012\061\014\074\016\126\017\121\020\117\021\043" +
    "\023\033\025\101\027\151\032\103\034\127\040\055\041" +
    "\120\044\134\045\041\047\147\050\025\051\011\053\076" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\100\064\103\023\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\134" +
    "\010\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\204\042\212\145\215\100\216\112" +
    "\217\060\001\002\000\134\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\134\u0199\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\002\001\ufffb\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\004\212\u0152\001\ufee5\000\132\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\002\001\ufef2\000\004" +
    "\212\u0177\001\002\000\002\001\ufef1\000\002\001\uffca\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\134\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\134\u0170\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\212\145\215\100\216\112" +
    "\217\060\001\002\000\002\001\ufed6\000\002\001\ufed7\000" +
    "\002\001\uffb1\000\004\212\u016b\001\ufef9\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\004\212" +
    "\u0164\001\002\000\002\001\ufffd\000\004\212\u0157\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\012\010\034\012\061\104\056\215\100\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\002\001\uffff\000\004\212\360\001\002\000\004" +
    "\212\153\001\002\000\132\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\070\031\177\113\166\114\206" +
    "\115\157\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\213\174\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\002\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\002\000\132\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\212\145\215\100\216\112\217" +
    "\060\001\002\000\132\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\212\145\215\100\216\112" +
    "\217\060\001\002\000\132\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\132\004\140\006\106\007\012" +
    "\010\034\011\053\012\061\016\126\032\103\054\142\055" +
    "\030\065\144\066\013\067\020\070\045\071\047\072\130" +
    "\073\006\074\035\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\002\000\132\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\002\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\210\003\115\004\140\005\152\006\106\007\012\010" +
    "\034\011\053\012\061\014\074\016\126\017\121\020\117" +
    "\021\043\023\033\025\101\027\151\032\103\034\127\040" +
    "\055\041\120\044\134\045\041\047\147\050\025\051\011" +
    "\053\076\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\100\064\103\023" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\134\010\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\204\042\212\145\214\276" +
    "\215\100\216\112\217\060\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\010\010" +
    "\225\012\061\215\100\001\002\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\002\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\002\000\012\031\177\156\175\157\173\160\156\001" +
    "\uff29\000\062\031\177\115\157\133\163\135\160\136\200" +
    "\137\161\140\170\141\201\142\205\143\171\144\155\145" +
    "\167\146\204\147\203\150\164\151\202\152\176\153\172" +
    "\154\207\155\165\156\175\157\173\160\156\163\162\001" +
    "\uff2e\000\034\031\177\146\204\147\203\150\164\151\202" +
    "\152\176\153\172\154\207\155\165\156\175\157\173\160" +
    "\156\163\162\001\uff1c\000\024\031\177\152\176\153\172" +
    "\154\207\155\165\156\175\157\173\160\156\163\162\001" +
    "\uff19\000\024\031\177\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\001\uff17\000\024\031" +
    "\177\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\001\uff18\000\044\031\177\142\205\143" +
    "\171\144\155\145\167\146\204\147\203\150\164\151\202" +
    "\152\176\153\172\154\207\155\165\156\175\157\173\160" +
    "\156\163\162\001\uff2c\000\052\031\177\137\161\140\170" +
    "\141\201\142\205\143\171\144\155\145\167\146\204\147" +
    "\203\150\164\151\202\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\001\uff31\000\002\001" +
    "\uff16\000\004\063\250\001\ufefd\000\002\001\ufeff\000\006" +
    "\012\061\215\243\001\002\000\004\102\236\001\002\000" +
    "\004\102\uff01\001\uff00\000\006\100\227\176\230\001\ufec6" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\ufebe\000\004\177\233\001\002\000\066\031\177\113" +
    "\166\114\206\115\157\133\163\135\160\136\200\137\161" +
    "\140\170\141\201\142\205\143\171\144\155\145\167\146" +
    "\204\147\203\150\164\151\202\152\176\153\172\154\207" +
    "\155\165\156\175\157\173\160\156\163\162\001\ufebd\000" +
    "\002\001\ufec3\000\070\031\177\101\235\113\166\114\206" +
    "\115\157\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\001\002\000\002\001\ufec2" +
    "\000\006\012\061\215\100\001\002\000\002\001\ufec9\000" +
    "\006\012\061\215\243\001\002\000\006\100\227\176\230" +
    "\001\ufecb\000\006\100\227\176\230\001\ufeca\000\004\100" +
    "\244\001\ufeb4\000\132\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\212\145\215\100\216\112" +
    "\217\060\001\002\000\070\031\177\101\246\113\166\114" +
    "\206\115\157\133\163\135\160\136\200\137\161\140\170" +
    "\141\201\142\205\143\171\144\155\145\167\146\204\147" +
    "\203\150\164\151\202\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\001\002\000\002\001" +
    "\ufebf\000\006\100\227\176\230\001\ufec5\000\014\010\257" +
    "\012\061\100\256\104\056\215\100\001\002\000\002\001" +
    "\ufeb7\000\002\001\ufeb8\000\002\001\ufebb\000\002\001\ufefb" +
    "\000\006\100\262\176\263\001\ufebc\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\002\001\ufe8d" +
    "\000\070\031\177\101\261\113\166\114\206\115\157\133" +
    "\163\135\160\136\200\137\161\140\170\141\201\142\205" +
    "\143\171\144\155\145\167\146\204\147\203\150\164\151" +
    "\202\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\001\002\000\002\001\ufeb6\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\ufebe\000" +
    "\004\177\265\001\002\000\002\001\ufeba\000\070\031\177" +
    "\101\267\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\002\000\002\001\ufeb9\000\004\063\272\001\ufefe\000" +
    "\002\001\ufefc\000\014\010\257\012\061\100\256\104\056" +
    "\215\100\001\002\000\002\001\ufefa\000\020\031\177\154" +
    "\207\155\165\156\175\157\173\160\156\163\162\001\uff24" +
    "\000\004\031\177\001\uff27\000\002\001\ufff8\000\002\001" +
    "\uff91\000\006\202\303\203\302\001\uff8d\000\002\001\uffee" +
    "\000\206\003\115\004\140\005\152\006\106\007\012\010" +
    "\034\011\053\012\061\014\074\016\126\017\121\020\117" +
    "\021\043\023\033\025\101\027\151\032\103\034\127\040" +
    "\055\041\120\044\134\045\041\047\147\050\025\051\011" +
    "\053\076\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\100\064\103\023" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\134\010\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\204\042\212\145\215\100" +
    "\216\112\217\060\001\002\000\004\212\304\001\002\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\070\031\177\113\166\114\206\115\157\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\213\306\001\002\000\206\003\115\004\140\005" +
    "\152\006\106\007\012\010\034\011\053\012\061\014\074" +
    "\016\126\017\121\020\117\021\043\023\033\025\101\027" +
    "\151\032\103\034\127\040\055\041\120\044\134\045\041" +
    "\047\147\050\025\051\011\053\076\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\100\064\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\212\145\215\100\216\112\217\060\001\002\000" +
    "\002\001\uff90\000\002\001\uff8c\000\222\003\115\004\140" +
    "\005\152\006\106\007\012\010\034\011\053\012\061\014" +
    "\074\016\126\017\121\020\117\021\043\023\033\025\101" +
    "\027\151\032\103\034\127\040\055\041\120\042\107\044" +
    "\134\045\041\047\147\050\025\051\011\053\076\054\142" +
    "\055\030\056\313\057\032\060\137\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\100\064" +
    "\103\023\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\134\010\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\204\042\205\062" +
    "\206\017\212\145\215\100\216\112\217\060\001\uff8f\000" +
    "\002\001\ufff9\000\004\212\334\001\002\000\002\001\ufff6" +
    "\000\006\202\322\203\321\001\uff8b\000\002\001\ufff5\000" +
    "\002\001\ufff7\000\004\201\332\001\002\000\004\214\330" +
    "\001\002\000\004\212\323\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\070\031\177" +
    "\113\166\114\206\115\157\133\163\135\160\136\200\137" +
    "\161\140\170\141\201\142\205\143\171\144\155\145\167" +
    "\146\204\147\203\150\164\151\202\152\176\153\172\154" +
    "\207\155\165\156\175\157\173\160\156\163\162\213\325" +
    "\001\002\000\004\214\326\001\002\000\002\001\ufff8\000" +
    "\222\003\115\004\140\005\152\006\106\007\012\010\034" +
    "\011\053\012\061\014\074\016\126\017\121\020\117\021" +
    "\043\023\033\025\101\027\151\032\103\034\127\040\055" +
    "\041\120\042\107\044\134\045\041\047\147\050\025\051" +
    "\011\053\076\054\142\055\030\056\313\057\032\060\137" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\100\064\103\023\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\134\010\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\204\042\205\062\206\017\212\145\215\100\216\112" +
    "\217\060\001\uff8e\000\002\001\ufff8\000\222\003\115\004" +
    "\140\005\152\006\106\007\012\010\034\011\053\012\061" +
    "\014\074\016\126\017\121\020\117\021\043\023\033\025" +
    "\101\027\151\032\103\034\127\040\055\041\120\042\107" +
    "\044\134\045\041\047\147\050\025\051\011\053\076\054" +
    "\142\055\030\056\313\057\032\060\137\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\100" +
    "\064\103\023\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\134\010\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\204\042\205" +
    "\062\206\017\212\145\215\100\216\112\217\060\001\uff8a" +
    "\000\004\134\333\001\002\000\002\001\uffed\000\004\213" +
    "\335\001\002\000\004\134\336\001\002\000\002\001\ufff4" +
    "\000\004\031\177\001\uff26\000\020\031\177\154\207\155" +
    "\165\156\175\157\173\160\156\163\162\001\uff23\000\034" +
    "\031\177\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\uff1b\000\046\031\177\141\201\142\205\143\171\144" +
    "\155\145\167\146\204\147\203\150\164\151\202\152\176" +
    "\153\172\154\207\155\165\156\175\157\173\160\156\163" +
    "\162\001\uff2b\000\034\031\177\146\204\147\203\150\164" +
    "\151\202\152\176\153\172\154\207\155\165\156\175\157" +
    "\173\160\156\163\162\001\uff1d\000\064\031\177\114\206" +
    "\115\157\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\001\uff30\000\012\031\177" +
    "\156\175\157\173\160\156\001\uff28\000\024\031\177\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\uff1a\000\070\031\177\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\214\350\001\002\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\066" +
    "\031\177\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\uff14\000\012\031\177\156\175\157\173\160\156\001" +
    "\uff2a\000\050\031\177\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\uff2d\000\054\031\177\136\200\137\161\140" +
    "\170\141\201\142\205\143\171\144\155\145\167\146\204" +
    "\147\203\150\164\151\202\152\176\153\172\154\207\155" +
    "\165\156\175\157\173\160\156\163\162\001\uff32\000\060" +
    "\031\177\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\001\uff2f\000\004\031\177" +
    "\001\uff25\000\034\031\177\146\204\147\203\150\164\151" +
    "\202\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\001\uff1e\000\006\010\257\104\056\001" +
    "\002\000\006\112\u010d\213\u010c\001\002\000\004\117\363" +
    "\001\002\000\034\006\106\007\012\010\372\016\126\066" +
    "\366\067\020\070\045\071\047\072\130\073\006\104\056" +
    "\154\364\155\373\001\002\000\034\006\106\007\012\010" +
    "\372\016\126\066\366\067\020\070\045\071\047\072\130" +
    "\073\006\104\056\154\364\155\373\001\002\000\002\001" +
    "\ufeeb\000\004\212\377\001\002\000\002\001\uff9e\000\002" +
    "\001\ufeec\000\002\001\ufee7\000\004\102\375\001\ufe8d\000" +
    "\034\006\106\007\012\010\372\016\126\066\366\067\020" +
    "\070\045\071\047\072\130\073\006\104\056\154\364\155" +
    "\373\001\002\000\002\001\ufee9\000\004\010\376\001\002" +
    "\000\002\001\ufee6\000\034\006\106\007\012\010\372\016" +
    "\126\066\366\067\020\070\045\071\047\072\130\073\006" +
    "\104\056\154\364\155\373\001\ufedf\000\004\213\u010a\001" +
    "\002\000\004\112\u0105\001\ufedd\000\004\064\u0103\001\ufed8" +
    "\000\034\006\106\007\012\010\372\016\126\066\366\067" +
    "\020\070\045\071\047\072\130\073\006\104\056\154\364" +
    "\155\373\001\002\000\002\001\ufed9\000\034\006\106\007" +
    "\012\010\372\016\126\066\366\067\020\070\045\071\047" +
    "\072\130\073\006\104\056\154\364\155\373\001\ufedc\000" +
    "\002\001\ufede\000\004\064\u0108\001\ufeda\000\034\006\106" +
    "\007\012\010\372\016\126\066\366\067\020\070\045\071" +
    "\047\072\130\073\006\104\056\154\364\155\373\001\002" +
    "\000\002\001\ufedb\000\002\001\ufee8\000\002\001\ufeea\000" +
    "\210\003\115\004\140\005\152\006\106\007\012\010\034" +
    "\011\053\012\061\014\074\016\126\017\121\020\117\021" +
    "\043\023\033\025\101\027\151\032\103\034\127\040\055" +
    "\041\120\044\134\045\041\047\147\050\025\051\011\053" +
    "\076\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\100\064\103\023\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\134\010\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\204\042\212\145\214\u0112\215" +
    "\100\216\112\217\060\001\002\000\006\010\257\104\056" +
    "\001\002\000\004\117\u010f\001\002\000\034\006\106\007" +
    "\012\010\372\016\126\066\366\067\020\070\045\071\047" +
    "\072\130\073\006\104\056\154\364\155\373\001\002\000" +
    "\002\001\uff9d\000\002\001\uffd8\000\002\001\ufff8\000\002" +
    "\001\uffa0\000\224\003\115\004\140\005\152\006\106\007" +
    "\012\010\034\011\053\012\061\014\074\016\126\017\121" +
    "\020\117\021\043\023\033\025\101\027\151\030\u0115\032" +
    "\103\034\127\040\055\041\120\042\107\044\134\045\041" +
    "\047\147\050\025\051\011\053\076\054\142\055\030\056" +
    "\313\057\032\060\137\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\100\064\103\023\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\134\010\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\204\042\205\062\206\017\212" +
    "\145\215\100\216\112\217\060\001\002\000\004\134\u0116" +
    "\001\002\000\002\001\uff9f\000\070\031\177\113\166\114" +
    "\206\115\157\133\163\134\u0118\135\160\136\200\137\161" +
    "\140\170\141\201\142\205\143\171\144\155\145\167\146" +
    "\204\147\203\150\164\151\202\152\176\153\172\154\207" +
    "\155\165\156\175\157\173\160\156\163\162\001\002\000" +
    "\002\001\uffd5\000\004\212\u0152\001\002\000\002\001\ufed3" +
    "\000\002\001\uff33\000\004\102\u011d\001\002\000\010\010" +
    "\u011f\012\061\215\100\001\002\000\004\212\u014f\001\ufec9" +
    "\000\004\212\u0120\001\002\000\134\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\141\u0124\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\uff7b\000\004\112\u014a" +
    "\001\uff7c\000\042\112\uff79\117\u012b\120\u012f\121\u012c\122" +
    "\u0135\123\u012e\124\u0134\125\u0131\126\u0133\127\u012d\130\u012a" +
    "\131\u0130\132\u0132\164\ufed3\165\ufed3\213\uff79\001\ufed5\000" +
    "\004\213\u0129\001\002\000\012\010\034\012\061\104\056" +
    "\215\100\001\002\000\066\031\177\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\002\000\006\112\uff7a\213" +
    "\uff7a\001\ufed6\000\002\001\uff78\000\002\001\ufed4\000\002" +
    "\001\uff04\000\132\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\212\145\215\100\216\112\217" +
    "\060\001\002\000\134\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\141\u0140\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\002\000\132\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\132\004\140" +
    "\006\106\007\012\010\034\011\053\012\061\016\126\032" +
    "\103\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\104\056\105\027\106" +
    "\070\107\050\110\123\111\105\116\063\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\002\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\002\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\132\004\140\006\106\007\012\010\034\011\053\012" +
    "\061\016\126\032\103\054\142\055\030\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\212\145\215\100\216\112\217\060\001" +
    "\002\000\132\004\140\006\106\007\012\010\034\011\053" +
    "\012\061\016\126\032\103\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\104\056\105\027\106\070\107\050\110\123\111\105\116" +
    "\063\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\212\145\215\100\216\112\217\060" +
    "\001\002\000\132\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\212\145\215\100\216\112\217" +
    "\060\001\002\000\060\031\177\133\163\135\160\136\200" +
    "\137\161\140\170\141\201\142\205\143\171\144\155\145" +
    "\167\146\204\147\203\150\164\151\202\152\176\153\172" +
    "\154\207\155\165\156\175\157\173\160\156\163\162\001" +
    "\uff3f\000\060\031\177\133\163\135\160\136\200\137\161" +
    "\140\170\141\201\142\205\143\171\144\155\145\167\146" +
    "\204\147\203\150\164\151\202\152\176\153\172\154\207" +
    "\155\165\156\175\157\173\160\156\163\162\001\uff3d\000" +
    "\060\031\177\133\163\135\160\136\200\137\161\140\170" +
    "\141\201\142\205\143\171\144\155\145\167\146\204\147" +
    "\203\150\164\151\202\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\001\uff3b\000\060\031" +
    "\177\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\uff37\000\060\031\177\133" +
    "\163\135\160\136\200\137\161\140\170\141\201\142\205" +
    "\143\171\144\155\145\167\146\204\147\203\150\164\151" +
    "\202\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\001\uff3c\000\060\031\177\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\uff38\000\060\031\177\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\uff41\000\060\031\177\133\163\135\160\136\200\137" +
    "\161\140\170\141\201\142\205\143\171\144\155\145\167" +
    "\146\204\147\203\150\164\151\202\152\176\153\172\154" +
    "\207\155\165\156\175\157\173\160\156\163\162\001\uff3e" +
    "\000\060\031\177\133\163\135\160\136\200\137\161\140" +
    "\170\141\201\142\205\143\171\144\155\145\167\146\204" +
    "\147\203\150\164\151\202\152\176\153\172\154\207\155" +
    "\165\156\175\157\173\160\156\163\162\001\uff3a\000\060" +
    "\031\177\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\001\uff40\000\014\010\034" +
    "\012\061\104\056\200\u0142\215\100\001\002\000\060\031" +
    "\177\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\uff46\000\010\010\225\012" +
    "\061\215\100\001\002\000\002\001\uff45\000\004\212\u0146" +
    "\001\ufef6\000\002\001\uff44\000\134\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\141\u0124\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\uff7b\000\004\213\u0148" +
    "\001\002\000\002\001\ufef5\000\060\031\177\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\uff39\000\134\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\141\u014c\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\042\112\uff76\117\u012b" +
    "\120\u012f\121\u012c\122\u0135\123\u012e\124\u0134\125\u0131\126" +
    "\u0133\127\u012d\130\u012a\131\u0130\132\u0132\164\ufed3\165\ufed3" +
    "\213\uff76\001\ufed5\000\012\010\034\012\061\104\056\215" +
    "\100\001\002\000\006\112\uff77\213\uff77\001\ufed6\000\002" +
    "\001\uff75\000\134\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\141\u0124\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\uff7b\000\004\213\u0151\001\002\000\002" +
    "\001\uff03\000\134\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\141\u0124\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\uff7b\000\004\213\u0154\001\002\000\002" +
    "\001\uff05\000\070\031\177\113\166\114\206\115\157\133" +
    "\163\135\160\136\200\137\161\140\170\141\201\142\205" +
    "\143\171\144\155\145\167\146\204\147\203\150\164\151" +
    "\202\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\213\u0156\001\002\000\002\001\uff15\000" +
    "\014\010\034\012\061\065\u015b\104\056\215\100\001\ufeaf" +
    "\000\006\112\u015f\213\u0161\001\002\000\002\001\ufeb2\000" +
    "\002\001\ufeb1\000\004\212\u015c\001\002\000\014\010\034" +
    "\012\061\065\u015b\104\056\215\100\001\ufeaf\000\006\112" +
    "\u015f\213\u015e\001\002\000\002\001\ufeb0\000\014\010\034" +
    "\012\061\065\u015b\104\056\215\100\001\ufeaf\000\002\001" +
    "\ufeb3\000\004\117\u0162\001\002\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\060\031\177\133" +
    "\163\135\160\136\200\137\161\140\170\141\201\142\205" +
    "\143\171\144\155\145\167\146\204\147\203\150\164\151" +
    "\202\152\176\153\172\154\207\155\165\156\175\157\173" +
    "\160\156\163\162\001\uff47\000\012\010\034\012\061\104" +
    "\056\215\100\001\002\000\002\001\ufe91\000\006\112\u0168" +
    "\213\u0167\001\002\000\002\001\ufe98\000\012\010\034\012" +
    "\061\104\056\215\100\001\002\000\002\001\ufe90\000\004" +
    "\031\177\001\uff20\000\134\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\213\u016e\215" +
    "\100\216\112\217\060\001\002\000\002\001\uff0b\000\070" +
    "\031\177\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\213\u016f\001\002\000\002\001\ufef8\000\002\001\ufef7\000" +
    "\002\001\uffe4\000\040\117\u012b\120\u012f\121\u012c\122\u0135" +
    "\123\u012e\124\u0134\125\u0131\126\u0133\127\u012d\130\u012a\131" +
    "\u0130\132\u0132\134\u0174\164\ufed3\165\ufed3\001\ufed5\000\004" +
    "\134\u0173\001\ufed6\000\002\001\uffe3\000\002\001\uffe2\000" +
    "\002\001\uff0d\000\002\001\uff11\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\070\031\177\113" +
    "\166\114\206\115\157\133\163\135\160\136\200\137\161" +
    "\140\170\141\201\142\205\143\171\144\155\145\167\146" +
    "\204\147\203\150\164\151\202\152\176\153\172\154\207" +
    "\155\165\156\175\157\173\160\156\163\162\213\u0179\001" +
    "\002\000\006\100\u017b\214\u017c\001\002\000\002\001\uffe9" +
    "\000\004\134\u018e\001\uff98\000\004\134\u017e\001\uff98\000" +
    "\010\035\u018b\036\u0181\037\u0182\001\002\000\002\001\uff98" +
    "\000\010\035\u0180\036\u0181\037\u0182\001\002\000\004\134" +
    "\u018a\001\002\000\132\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\154\104\155\066\161\141\162\015\164\052" +
    "\165\146\166\026\167\132\170\040\171\125\172\072\173" +
    "\133\174\067\175\037\200\075\212\145\215\100\216\112" +
    "\217\060\001\002\000\006\134\u0185\214\u0184\001\002\000" +
    "\002\001\ufff8\000\002\001\uff95\000\002\001\uff94\000\222" +
    "\003\115\004\140\005\152\006\106\007\012\010\034\011" +
    "\053\012\061\014\074\016\126\017\121\020\117\021\043" +
    "\023\033\025\101\027\151\032\103\034\127\040\055\041" +
    "\120\042\107\044\134\045\041\047\147\050\025\051\011" +
    "\053\076\054\142\055\030\056\313\057\032\060\137\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\100\064\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\205\062\206\017\212\145\215\100\216\112\217" +
    "\060\001\uff96\000\072\031\177\113\166\114\206\115\157" +
    "\133\163\134\u0185\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\214\u0184\001\002\000\002" +
    "\001\ufff8\000\222\003\115\004\140\005\152\006\106\007" +
    "\012\010\034\011\053\012\061\014\074\016\126\017\121" +
    "\020\117\021\043\023\033\025\101\027\151\032\103\034" +
    "\127\040\055\041\120\042\107\044\134\045\041\047\147" +
    "\050\025\051\011\053\076\054\142\055\030\056\313\057" +
    "\032\060\137\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\100\064\103\023\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\134\010" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\204\042\205\062\206\017\212\145\215" +
    "\100\216\112\217\060\001\uff97\000\002\001\uff99\000\004" +
    "\134\u018c\001\002\000\002\001\uff9a\000\010\036\u0181\037" +
    "\u0182\101\u0191\001\002\000\002\001\uff98\000\010\036\u0181" +
    "\037\u0182\101\u0190\001\002\000\002\001\uff9b\000\002\001" +
    "\uff9c\000\002\001\uff0f\000\066\031\177\113\166\114\206" +
    "\115\157\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\001\ufe93\000\006\112\u0196" +
    "\134\u0197\001\002\000\066\031\177\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\uff4c\000\132\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\154\104\155\066\161" +
    "\141\162\015\164\052\165\146\166\026\167\132\170\040" +
    "\171\125\172\072\173\133\174\067\175\037\200\075\212" +
    "\145\215\100\216\112\217\060\001\002\000\002\001\uffdf" +
    "\000\066\031\177\113\166\114\206\115\157\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\uff4d\000\002\001\uffe6\000\070\031\177\113" +
    "\166\114\206\115\157\133\163\134\u019b\135\160\136\200" +
    "\137\161\140\170\141\201\142\205\143\171\144\155\145" +
    "\167\146\204\147\203\150\164\151\202\152\176\153\172" +
    "\154\207\155\165\156\175\157\173\160\156\163\162\001" +
    "\002\000\002\001\uffe5\000\004\021\u019d\001\002\000\004" +
    "\212\u019e\001\002\000\132\004\140\006\106\007\012\010" +
    "\034\011\053\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\070\031\177\113\166\114\206" +
    "\115\157\133\163\135\160\136\200\137\161\140\170\141" +
    "\201\142\205\143\171\144\155\145\167\146\204\147\203" +
    "\150\164\151\202\152\176\153\172\154\207\155\165\156" +
    "\175\157\173\160\156\163\162\213\u01a0\001\002\000\004" +
    "\134\u01a1\001\002\000\002\001\uffeb\000\004\061\u01a4\001" +
    "\uffb0\000\002\001\uffbe\000\006\003\u01a5\010\u01a8\001\002" +
    "\000\002\001\uffa9\000\004\112\u01a9\001\uffaf\000\002\001" +
    "\uffac\000\002\001\uff01\000\006\003\u01aa\010\u01a8\001\002" +
    "\000\002\001\uffaa\000\002\001\uffab\000\004\100\u01ad\001" +
    "\002\000\002\001\uff6a\000\232\003\u01bd\004\140\005\152" +
    "\006\106\007\012\010\034\011\053\012\061\014\074\016" +
    "\126\017\121\020\117\021\043\023\033\025\101\027\151" +
    "\032\103\034\127\040\055\041\120\043\u01bf\044\134\045" +
    "\041\047\147\050\025\051\011\052\u01c2\053\076\054\142" +
    "\055\030\057\032\060\137\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\100\064\101\u01ba" +
    "\103\u01b0\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\134\010\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\204\u01b1\205\u01b4" +
    "\206\u01af\207\u01b9\210\u01b8\211\u01c0\212\145\215\100\216" +
    "\112\217\060\001\uff5d\000\004\057\u01ff\001\uff54\000\002" +
    "\001\uff64\000\002\001\uff56\000\002\001\uff5b\000\006\112" +
    "\u01f1\134\u01f2\001\002\000\004\057\u01f0\001\uff55\000\004" +
    "\012\u01e7\001\002\000\020\042\uff5c\204\u01e4\205\u01e6\206" +
    "\u01e5\207\u01b9\210\u01b8\211\u01c0\001\uff5f\000\002\001\uffb9" +
    "\000\002\001\uff58\000\002\001\uff57\000\002\001\uffba\000" +
    "\002\001\uffbd\000\002\001\uff6b\000\002\001\uff63\000\002" +
    "\001\uffb8\000\004\010\u01e0\001\002\000\002\001\uff59\000" +
    "\004\042\u01c3\001\002\000\002\001\uff5e\000\004\141\u01c4" +
    "\001\uffc8\000\002\001\uffc7\000\006\010\257\104\056\001" +
    "\002\000\002\001\uff67\000\004\212\u01c8\001\002\000\012" +
    "\003\u01cb\010\u01cd\066\u01ca\213\uff88\001\uff7f\000\006\012" +
    "\u01da\141\u01d9\001\002\000\002\001\uff7d\000\002\001\uff80" +
    "\000\004\213\u01d2\001\002\000\002\001\uff7e\000\004\112" +
    "\u01d0\001\uff89\000\002\001\uff87\000\014\003\u01cb\010\u01cd" +
    "\066\u01ca\112\uff85\213\uff85\001\uff7f\000\002\001\uff86\000" +
    "\002\001\uff66\000\006\100\u01d5\134\u01d6\001\uff60\000\002" +
    "\001\uff65\000\002\001\ufff8\000\002\001\uff62\000\224\003" +
    "\115\004\140\005\152\006\106\007\012\010\034\011\053" +
    "\012\061\014\074\016\126\017\121\020\117\021\043\023" +
    "\033\025\101\027\151\032\103\034\127\040\055\041\120" +
    "\042\107\044\134\045\041\047\147\050\025\051\011\053" +
    "\076\054\142\055\030\056\313\057\032\060\137\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\100\064\101\u01d8\103\023\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\134\010\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\204\042\205\062\206\017\212\145\215\100\216\112" +
    "\217\060\001\002\000\002\001\uff61\000\004\012\u01dd\001" +
    "\002\000\004\117\u01db\001\uff84\000\034\006\106\007\012" +
    "\010\372\016\126\066\366\067\020\070\045\071\047\072" +
    "\130\073\006\104\056\154\364\155\373\001\002\000\002" +
    "\001\uff82\000\004\117\u01de\001\uff83\000\034\006\106\007" +
    "\012\010\372\016\126\066\366\067\020\070\045\071\047" +
    "\072\130\073\006\104\056\154\364\155\373\001\002\000" +
    "\002\001\uff81\000\004\117\u01e1\001\002\000\034\006\106" +
    "\007\012\010\372\016\126\066\366\067\020\070\045\071" +
    "\047\072\130\073\006\104\056\154\364\155\373\001\002" +
    "\000\002\001\uff4e\000\002\001\uff5a\000\002\001\uff56\000" +
    "\002\001\uff54\000\002\001\uff55\000\004\117\u01ee\001\uff51" +
    "\000\006\112\u01e9\134\u01ea\001\002\000\004\012\u01eb\001" +
    "\002\000\002\001\uff69\000\004\117\u01ec\001\uff53\000\034" +
    "\006\106\007\012\010\372\016\126\066\366\067\020\070" +
    "\045\071\047\072\130\073\006\104\056\154\364\155\373" +
    "\001\002\000\002\001\uff52\000\034\006\106\007\012\010" +
    "\372\016\126\066\366\067\020\070\045\071\047\072\130" +
    "\073\006\104\056\154\364\155\373\001\002\000\002\001" +
    "\uff50\000\002\001\uffb6\000\004\010\u01f3\001\002\000\002" +
    "\001\uff68\000\004\117\u01f4\001\002\000\034\006\106\007" +
    "\012\010\372\016\126\066\366\067\020\070\045\071\047" +
    "\072\130\073\006\104\056\154\364\155\373\001\002\000" +
    "\002\001\uff4f\000\004\117\u01fd\001\uff6d\000\006\112\u01f8" +
    "\134\u01f9\001\002\000\004\012\u01fa\001\002\000\002\001" +
    "\uffe0\000\004\117\u01fb\001\uff6f\000\034\006\106\007\012" +
    "\010\372\016\126\066\366\067\020\070\045\071\047\072" +
    "\130\073\006\104\056\154\364\155\373\001\002\000\002" +
    "\001\uff6e\000\034\006\106\007\012\010\372\016\126\066" +
    "\366\067\020\070\045\071\047\072\130\073\006\104\056" +
    "\154\364\155\373\001\002\000\002\001\uff6c\000\002\001" +
    "\uffb5\000\014\012\061\015\u0206\076\u0205\077\u0203\216\u0204" +
    "\001\002\000\006\063\u0211\176\u0210\001\ufea1\000\002\001" +
    "\ufea4\000\012\010\034\012\061\104\056\215\100\001\002" +
    "\000\002\001\ufee1\000\132\004\140\006\106\007\012\010" +
    "\034\011\u0207\012\061\016\126\032\103\054\142\055\030" +
    "\065\144\066\013\067\020\070\045\071\047\072\130\073" +
    "\006\074\035\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\002\001\ufea3\000\004\176\u020a" +
    "\001\ufee4\000\070\031\177\101\u0209\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\002\000\002\001\ufe9e\000" +
    "\132\004\140\006\106\007\012\010\034\011\053\012\061" +
    "\016\126\032\103\054\142\055\030\065\144\066\013\067" +
    "\020\070\045\071\047\072\130\073\006\074\035\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\154" +
    "\104\155\066\161\141\162\015\164\052\165\146\166\026" +
    "\167\132\170\040\171\125\172\072\173\133\174\067\175" +
    "\037\200\075\212\145\215\100\216\112\217\060\001\002" +
    "\000\070\031\177\113\166\114\206\115\157\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\177\u020c\001\002\000\004\101\u020d\001\002\000" +
    "\002\001\ufe9d\000\004\101\u020f\001\002\000\002\001\ufe9c" +
    "\000\012\010\257\012\061\013\u0216\104\056\001\002\000" +
    "\006\010\257\104\056\001\002\000\002\001\ufe9f\000\002" +
    "\001\ufe99\000\004\177\u0217\001\002\000\002\001\ufe9b\000" +
    "\002\001\ufe9a\000\002\001\ufea0\000\006\010\257\104\056" +
    "\001\002\000\002\001\uffc6\000\004\212\u021b\001\002\000" +
    "\012\003\u01cb\010\u01cd\066\u01ca\213\uff88\001\uff7f\000\004" +
    "\213\u021d\001\002\000\002\001\uffc5\000\006\003\u0220\100" +
    "\u021f\001\002\000\002\001\ufff8\000\002\001\uffc2\000\002" +
    "\001\uffc4\000\224\003\115\004\140\005\152\006\106\007" +
    "\012\010\034\011\053\012\061\014\074\016\126\017\121" +
    "\020\117\021\043\023\033\025\101\027\151\032\103\034" +
    "\127\040\055\041\120\042\107\044\134\045\041\047\147" +
    "\050\025\051\011\053\076\054\142\055\030\056\313\057" +
    "\032\060\137\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\100\064\101\u0223\103\023\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\134\010\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\204\042\205\062\206\017\212" +
    "\145\215\100\216\112\217\060\001\002\000\002\001\uffc3" +
    "\000\066\031\177\113\166\114\206\115\157\133\163\135" +
    "\160\136\200\137\161\140\170\141\201\142\205\143\171" +
    "\144\155\145\167\146\204\147\203\150\164\151\202\152" +
    "\176\153\172\154\207\155\165\156\175\157\173\160\156" +
    "\163\162\001\ufe92\000\012\031\177\156\175\157\173\160" +
    "\156\001\uff22\000\002\001\uff42\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\002\000\040\033\u0239\117" +
    "\u012b\120\u012f\121\u012c\122\u0135\123\u012e\124\u0134\125\u0131" +
    "\126\u0133\127\u012d\130\u012a\131\u0130\132\u0132\164\ufed3\165" +
    "\ufed3\001\ufed5\000\004\033\u022a\001\ufed6\000\012\010\034" +
    "\012\061\104\056\215\100\001\002\000\004\064\u022d\001" +
    "\uffa8\000\004\213\u0232\001\002\000\014\010\034\012\061" +
    "\104\056\141\u0230\215\100\001\002\000\002\001\uffa7\000" +
    "\002\001\uffa6\000\012\010\034\012\061\104\056\215\100" +
    "\001\002\000\002\001\uffa5\000\210\003\115\004\140\005" +
    "\152\006\106\007\012\010\034\011\053\012\061\014\074" +
    "\016\126\017\121\020\117\021\043\023\033\025\101\027" +
    "\151\032\103\034\127\040\055\041\120\044\134\045\041" +
    "\047\147\050\025\051\011\053\076\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\100\064\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\212\145\214\u0233\215\100\216\112\217\060\001" +
    "\002\000\002\001\ufff8\000\002\001\uffa2\000\002\001\uffd9" +
    "\000\224\003\115\004\140\005\152\006\106\007\012\010" +
    "\034\011\053\012\061\014\074\016\126\017\121\020\117" +
    "\021\043\023\033\025\101\026\u0237\027\151\032\103\034" +
    "\127\040\055\041\120\042\107\044\134\045\041\047\147" +
    "\050\025\051\011\053\076\054\142\055\030\056\313\057" +
    "\032\060\137\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\100\064\103\023\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\134\010" +
    "\154\104\155\066\161\141\162\015\164\052\165\146\166" +
    "\026\167\132\170\040\171\125\172\072\173\133\174\067" +
    "\175\037\200\075\204\042\205\062\206\017\212\145\215" +
    "\100\216\112\217\060\001\002\000\004\134\u0238\001\002" +
    "\000\002\001\uffa1\000\014\010\034\012\061\104\056\141" +
    "\u0230\215\100\001\002\000\004\064\u022d\001\uffa8\000\004" +
    "\213\u023c\001\002\000\210\003\115\004\140\005\152\006" +
    "\106\007\012\010\034\011\053\012\061\014\074\016\126" +
    "\017\121\020\117\021\043\023\033\025\101\027\151\032" +
    "\103\034\127\040\055\041\120\044\134\045\041\047\147" +
    "\050\025\051\011\053\076\054\142\055\030\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\100\064\103\023\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\134\010\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\204\042" +
    "\212\145\214\u0233\215\100\216\112\217\060\001\002\000" +
    "\002\001\uffda\000\002\001\uff36\000\002\001\uff34\000\012" +
    "\010\034\012\061\104\056\215\100\001\002\000\002\001" +
    "\uffcf\000\002\001\uffcd\000\006\112\u0245\213\u0244\001\002" +
    "\000\004\134\u0247\001\002\000\012\010\034\012\061\104" +
    "\056\215\100\001\002\000\002\001\uffce\000\002\001\uffdb" +
    "\000\004\212\u0146\001\ufef6\000\002\001\uff43\000\002\001" +
    "\uff0e\000\010\100\227\176\230\212\ufeca\001\ufec5\000\066" +
    "\031\177\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\ufe95\000\002\001\uff0c\000\012\031\177\156\175\157" +
    "\173\160\156\001\uff21\000\002\001\ufff8\000\224\003\115" +
    "\004\140\005\152\006\106\007\012\010\034\011\053\012" +
    "\061\014\074\016\126\017\121\020\117\021\043\023\033" +
    "\025\101\027\151\032\103\034\127\040\055\041\120\042" +
    "\107\044\134\045\041\047\147\050\025\051\011\053\076" +
    "\054\142\055\030\056\313\057\032\060\137\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\100\064\101\u0251\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\205\062\206\017\212\145\215\100\216\112\217" +
    "\060\001\002\000\002\001\uffef\000\060\031\177\133\163" +
    "\135\160\136\200\137\161\140\170\141\201\142\205\143" +
    "\171\144\155\145\167\146\204\147\203\150\164\151\202" +
    "\152\176\153\172\154\207\155\165\156\175\157\173\160" +
    "\156\163\162\001\uff06\000\014\012\061\015\u0206\076\u0205" +
    "\077\u0203\217\u0254\001\002\000\002\001\uff07\000\004\213" +
    "\u0256\001\002\000\004\134\u0257\001\002\000\002\001\ufffa" +
    "\000\002\001\uffe8\000\070\031\177\113\166\114\206\115" +
    "\157\133\163\134\u025a\135\160\136\200\137\161\140\170" +
    "\141\201\142\205\143\171\144\155\145\167\146\204\147" +
    "\203\150\164\151\202\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\001\002\000\002\001" +
    "\uffe7\000\002\001\uff35\000\014\010\257\012\061\100\256" +
    "\104\056\215\100\001\002\000\004\212\u025f\001\ufecc\000" +
    "\002\001\ufecf\000\134\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\141\u0124\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\uff7b\000\004\213\u0261\001\002\000" +
    "\002\001\ufecd\000\004\063\u0264\001\ufed2\000\002\001\ufed0" +
    "\000\014\010\257\012\061\100\256\104\056\215\100\001" +
    "\002\000\004\212\u025f\001\ufecc\000\002\001\ufece\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\002\000" +
    "\070\031\177\113\166\114\206\115\157\133\163\135\160" +
    "\136\200\137\161\140\170\141\201\142\205\143\171\144" +
    "\155\145\167\146\204\147\203\150\164\151\202\152\176" +
    "\153\172\154\207\155\165\156\175\157\173\160\156\163" +
    "\162\213\u0269\001\002\000\002\001\ufe94\000\002\001\uffc1" +
    "\000\004\061\u026c\001\uffb4\000\006\003\u0277\010\u01a8\001" +
    "\002\000\004\003\u026f\001\uffbb\000\004\062\u0271\001\uffae" +
    "\000\002\001\uffbc\000\002\001\uffc0\000\006\003\u01a5\010" +
    "\u01a8\001\002\000\004\112\u01a9\001\uffad\000\004\100\u0274" +
    "\001\002\000\002\001\uff6a\000\232\003\u01bd\004\140\005" +
    "\152\006\106\007\012\010\034\011\053\012\061\014\074" +
    "\016\126\017\121\020\117\021\043\023\033\025\101\027" +
    "\151\032\103\034\127\040\055\041\120\043\u01bf\044\134" +
    "\045\041\047\147\050\025\051\011\052\u01c2\053\076\054" +
    "\142\055\030\057\032\060\137\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\100\064\101" +
    "\u01ba\103\u01b0\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\134\010\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\204\u01b1\205" +
    "\u01b4\206\u01af\207\u01b9\210\u01b8\211\u01c0\212\145\215\100" +
    "\216\112\217\060\001\uff5d\000\002\001\uffbf\000\002\001" +
    "\uffb2\000\002\001\uffb3\000\132\004\140\006\106\007\012" +
    "\010\034\011\053\012\061\016\126\032\103\054\142\055" +
    "\030\065\144\066\013\067\020\070\045\071\047\072\130" +
    "\073\006\074\035\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\002\000\070\031\177\113\166\114" +
    "\206\115\157\133\163\135\160\136\200\137\161\140\170" +
    "\141\201\142\205\143\171\144\155\145\167\146\204\147" +
    "\203\150\164\151\202\152\176\153\172\154\207\155\165" +
    "\156\175\157\173\160\156\163\162\213\u027b\001\002\000" +
    "\210\003\115\004\140\005\152\006\106\007\012\010\034" +
    "\011\053\012\061\014\074\016\126\017\121\020\117\021" +
    "\043\023\033\025\101\027\151\032\103\034\127\040\055" +
    "\041\120\044\134\045\041\047\147\050\025\051\011\053" +
    "\076\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\100\064\103\023\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\134\010\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\204\042\212\145\214\u027c\215" +
    "\100\216\112\217\060\001\002\000\002\001\ufff8\000\002" +
    "\001\uffec\000\002\001\uff93\000\224\003\115\004\140\005" +
    "\152\006\106\007\012\010\034\011\053\012\061\014\074" +
    "\016\126\017\121\020\117\021\043\022\u0280\023\033\025" +
    "\101\027\151\032\103\034\127\040\055\041\120\042\107" +
    "\044\134\045\041\047\147\050\025\051\011\053\076\054" +
    "\142\055\030\056\313\057\032\060\137\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\100" +
    "\064\103\023\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\134\010\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\204\042\205" +
    "\062\206\017\212\145\215\100\216\112\217\060\001\002" +
    "\000\004\134\u0281\001\002\000\002\001\uff92\000\002\001" +
    "\ufff8\000\224\003\115\004\140\005\152\006\106\007\012" +
    "\010\034\011\053\012\061\014\074\016\126\017\121\020" +
    "\117\021\043\023\033\025\101\027\151\032\103\034\127" +
    "\040\055\041\120\042\107\044\134\045\041\047\147\050" +
    "\025\051\011\053\076\054\142\055\030\056\313\057\032" +
    "\060\137\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\100\064\101\u0284\103\023\104\056" +
    "\105\027\106\070\107\050\110\123\111\105\116\063\134" +
    "\010\154\104\155\066\161\141\162\015\164\052\165\146" +
    "\166\026\167\132\170\040\171\125\172\072\173\133\174" +
    "\067\175\037\200\075\204\042\205\062\206\017\212\145" +
    "\215\100\216\112\217\060\001\002\000\004\046\u0285\001" +
    "\002\000\004\212\u0286\001\002\000\004\010\u01a8\001\002" +
    "\000\004\012\061\001\002\000\004\213\u0289\001\002\000" +
    "\004\100\u028a\001\002\000\002\001\ufff8\000\224\003\115" +
    "\004\140\005\152\006\106\007\012\010\034\011\053\012" +
    "\061\014\074\016\126\017\121\020\117\021\043\023\033" +
    "\025\101\027\151\032\103\034\127\040\055\041\120\042" +
    "\107\044\134\045\041\047\147\050\025\051\011\053\076" +
    "\054\142\055\030\056\313\057\032\060\137\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\100\064\101\u028c\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\205\062\206\017\212\145\215\100\216\112\217" +
    "\060\001\002\000\004\046\u028d\001\uffd3\000\004\212\u0292" +
    "\001\002\000\002\001\uffd6\000\002\001\uffd2\000\004\046" +
    "\u028d\001\uffd4\000\002\001\uffd1\000\004\010\u01a8\001\002" +
    "\000\004\012\u0294\001\002\000\004\213\u0295\001\002\000" +
    "\004\100\u0296\001\002\000\002\001\ufff8\000\224\003\115" +
    "\004\140\005\152\006\106\007\012\010\034\011\053\012" +
    "\061\014\074\016\126\017\121\020\117\021\043\023\033" +
    "\025\101\027\151\032\103\034\127\040\055\041\120\042" +
    "\107\044\134\045\041\047\147\050\025\051\011\053\076" +
    "\054\142\055\030\056\313\057\032\060\137\065\144\066" +
    "\013\067\020\070\045\071\047\072\130\073\006\074\035" +
    "\100\064\101\u0298\103\023\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\134\010\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\204\042\205\062\206\017\212\145\215\100\216\112\217" +
    "\060\001\002\000\002\001\uffd0\000\002\001\uff10\000\002" +
    "\001\uff0a\000\014\012\061\015\u0206\075\u029c\076\u0205\077" +
    "\u0203\001\002\000\002\001\ufee0\000\132\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\154\104\155\066\161\141" +
    "\162\015\164\052\165\146\166\026\167\132\170\040\171" +
    "\125\172\072\173\133\174\067\175\037\200\075\212\145" +
    "\215\100\216\112\217\060\001\uff4b\000\004\112\u02ac\001" +
    "\uff4a\000\066\031\177\113\166\114\206\115\157\133\163" +
    "\135\160\136\200\137\161\140\170\141\201\142\205\143" +
    "\171\144\155\145\167\146\204\147\203\150\164\151\202" +
    "\152\176\153\172\154\207\155\165\156\175\157\173\160" +
    "\156\163\162\001\uff48\000\004\134\u02a1\001\002\000\132" +
    "\004\140\006\106\007\012\010\034\011\053\012\061\016" +
    "\126\032\103\054\142\055\030\065\144\066\013\067\020" +
    "\070\045\071\047\072\130\073\006\074\035\104\056\105" +
    "\027\106\070\107\050\110\123\111\105\116\063\154\104" +
    "\155\066\161\141\162\015\164\052\165\146\166\026\167" +
    "\132\170\040\171\125\172\072\173\133\174\067\175\037" +
    "\200\075\212\145\215\100\216\112\217\060\001\uff4b\000" +
    "\004\134\u02a3\001\002\000\132\004\140\006\106\007\012" +
    "\010\034\011\053\012\061\016\126\032\103\054\142\055" +
    "\030\065\144\066\013\067\020\070\045\071\047\072\130" +
    "\073\006\074\035\104\056\105\027\106\070\107\050\110" +
    "\123\111\105\116\063\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\uff4b\000\004\213\u02a5\001\002\000" +
    "\210\003\115\004\140\005\152\006\106\007\012\010\034" +
    "\011\053\012\061\014\074\016\126\017\121\020\117\021" +
    "\043\023\033\025\101\027\151\032\103\034\127\040\055" +
    "\041\120\044\134\045\041\047\147\050\025\051\011\053" +
    "\076\054\142\055\030\065\144\066\013\067\020\070\045" +
    "\071\047\072\130\073\006\074\035\100\064\103\023\104" +
    "\056\105\027\106\070\107\050\110\123\111\105\116\063" +
    "\134\010\154\104\155\066\161\141\162\015\164\052\165" +
    "\146\166\026\167\132\170\040\171\125\172\072\173\133" +
    "\174\067\175\037\200\075\204\042\212\145\214\u02a7\215" +
    "\100\216\112\217\060\001\002\000\002\001\uffea\000\002" +
    "\001\ufff8\000\002\001\uffa4\000\224\003\115\004\140\005" +
    "\152\006\106\007\012\010\034\011\053\012\061\014\074" +
    "\016\126\017\121\020\117\021\043\023\033\024\u02aa\025" +
    "\101\027\151\032\103\034\127\040\055\041\120\042\107" +
    "\044\134\045\041\047\147\050\025\051\011\053\076\054" +
    "\142\055\030\056\313\057\032\060\137\065\144\066\013" +
    "\067\020\070\045\071\047\072\130\073\006\074\035\100" +
    "\064\103\023\104\056\105\027\106\070\107\050\110\123" +
    "\111\105\116\063\134\010\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\204\042\205" +
    "\062\206\017\212\145\215\100\216\112\217\060\001\002" +
    "\000\004\134\u02ab\001\002\000\002\001\uffa3\000\132\004" +
    "\140\006\106\007\012\010\034\011\053\012\061\016\126" +
    "\032\103\054\142\055\030\065\144\066\013\067\020\070" +
    "\045\071\047\072\130\073\006\074\035\104\056\105\027" +
    "\106\070\107\050\110\123\111\105\116\063\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\002\000\066" +
    "\031\177\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\uff49\000\010\010\u02af\012\061\215\100\001\002\000" +
    "\004\212\u0120\001\ufe8f\000\012\010\034\012\061\104\056" +
    "\215\100\001\002\000\004\213\u02b2\001\002\000\002\001" +
    "\ufe97\000\066\031\177\113\166\114\206\115\157\133\163" +
    "\135\160\136\200\137\161\140\170\141\201\142\205\143" +
    "\171\144\155\145\167\146\204\147\203\150\164\151\202" +
    "\152\176\153\172\154\207\155\165\156\175\157\173\160" +
    "\156\163\162\001\ufe96\000\002\001\uff12\000\004\134\u02ba" +
    "\001\002\000\004\016\u02b8\001\002\000\002\001\uffcc\000" +
    "\004\213\u02b9\001\002\000\002\001\uffcb\000\002\001\uffdc" +
    "\000\002\001\uffdd\000\002\001\uff1f\000\134\004\140\006" +
    "\106\007\012\010\034\011\053\012\061\016\126\032\103" +
    "\054\142\055\030\065\144\066\013\067\020\070\045\071" +
    "\047\072\130\073\006\074\035\104\056\105\027\106\070" +
    "\107\050\110\123\111\105\116\063\141\u02c0\154\104\155" +
    "\066\161\141\162\015\164\052\165\146\166\026\167\132" +
    "\170\040\171\125\172\072\173\133\174\067\175\037\200" +
    "\075\212\145\215\100\216\112\217\060\001\ufeae\000\004" +
    "\213\u02d0\001\002\000\004\112\u02c7\001\ufedd\000\012\010" +
    "\034\012\061\104\056\215\100\001\002\000\070\031\177" +
    "\064\u02c2\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\ufea9\000\134\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\141\u02c3\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\012\010\034\012\061\104\056" +
    "\215\100\001\002\000\066\031\177\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\ufeaa\000\002\001\ufea6\000" +
    "\002\001\ufea5\000\134\004\140\006\106\007\012\010\034" +
    "\011\053\012\061\016\126\032\103\054\142\055\030\065" +
    "\144\066\013\067\020\070\045\071\047\072\130\073\006" +
    "\074\035\104\056\105\027\106\070\107\050\110\123\111" +
    "\105\116\063\141\u02c9\154\104\155\066\161\141\162\015" +
    "\164\052\165\146\166\026\167\132\170\040\171\125\172" +
    "\072\173\133\174\067\175\037\200\075\212\145\215\100" +
    "\216\112\217\060\001\ufedc\000\002\001\ufead\000\012\010" +
    "\034\012\061\104\056\215\100\001\002\000\070\031\177" +
    "\064\u02cb\113\166\114\206\115\157\133\163\135\160\136" +
    "\200\137\161\140\170\141\201\142\205\143\171\144\155" +
    "\145\167\146\204\147\203\150\164\151\202\152\176\153" +
    "\172\154\207\155\165\156\175\157\173\160\156\163\162" +
    "\001\ufeab\000\134\004\140\006\106\007\012\010\034\011" +
    "\053\012\061\016\126\032\103\054\142\055\030\065\144" +
    "\066\013\067\020\070\045\071\047\072\130\073\006\074" +
    "\035\104\056\105\027\106\070\107\050\110\123\111\105" +
    "\116\063\141\u02cc\154\104\155\066\161\141\162\015\164" +
    "\052\165\146\166\026\167\132\170\040\171\125\172\072" +
    "\173\133\174\067\175\037\200\075\212\145\215\100\216" +
    "\112\217\060\001\002\000\012\010\034\012\061\104\056" +
    "\215\100\001\002\000\066\031\177\113\166\114\206\115" +
    "\157\133\163\135\160\136\200\137\161\140\170\141\201" +
    "\142\205\143\171\144\155\145\167\146\204\147\203\150" +
    "\164\151\202\152\176\153\172\154\207\155\165\156\175" +
    "\157\173\160\156\163\162\001\ufeac\000\002\001\ufea8\000" +
    "\002\001\ufea7\000\002\001\uff08\000\006\112\u02da\134\u02db" +
    "\001\002\000\002\001\uff72\000\014\010\034\012\061\100" +
    "\u02d7\104\056\215\100\001\002\000\002\001\uff73\000\002" +
    "\001\uff71\000\002\001\ufed5\000\132\004\140\006\106\007" +
    "\012\010\034\011\053\012\061\016\126\032\103\054\142" +
    "\055\030\065\144\066\013\067\020\070\045\071\047\072" +
    "\130\073\006\074\035\104\056\105\027\106\070\107\050" +
    "\110\123\111\105\116\063\154\104\155\066\161\141\162" +
    "\015\164\052\165\146\166\026\167\132\170\040\171\125" +
    "\172\072\173\133\174\067\175\037\200\075\212\145\215" +
    "\100\216\112\217\060\001\002\000\070\031\177\101\u02d9" +
    "\113\166\114\206\115\157\133\163\135\160\136\200\137" +
    "\161\140\170\141\201\142\205\143\171\144\155\145\167" +
    "\146\204\147\203\150\164\151\202\152\176\153\172\154" +
    "\207\155\165\156\175\157\173\160\156\163\162\001\002" +
    "\000\002\001\uff70\000\006\012\u02d2\215\u02d3\001\002\000" +
    "\002\001\uffe1\000\002\001\uff74\000\134\004\140\006\106" +
    "\007\012\010\034\011\053\012\061\016\126\032\103\054" +
    "\142\055\030\065\144\066\013\067\020\070\045\071\047" +
    "\072\130\073\006\074\035\104\056\105\027\106\070\107" +
    "\050\110\123\111\105\116\063\141\u0124\154\104\155\066" +
    "\161\141\162\015\164\052\165\146\166\026\167\132\170" +
    "\040\171\125\172\072\173\133\174\067\175\037\200\075" +
    "\212\145\215\100\216\112\217\060\001\uff7b\000\004\213" +
    "\u02df\001\002\000\002\001\uff02\000\002\001\000" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02de\000\006\003\003\004\004\001\001\000\002\001" +
    "\001\000\074\005\147\006\142\011\110\051\134\052\043" +
    "\055\107\057\013\063\015\064\053\065\115\072\070\102" +
    "\064\103\123\104\113\107\030\120\101\121\121\122\021" +
    "\126\130\127\023\130\045\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\040" +
    "\u02d0\041\u02d3\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\u02bb\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\u02b4\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\u02b3\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\u02b2\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\077\u029a\001" +
    "\001\000\002\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0299\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\u0298\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\002\001\001\000\004\042\u01f6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\034\052\043\064\053\065\115\072\070\103\u0118" +
    "\107\u011b\122\u0119\137\u025a\140\006\142\020\144\112\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\u0258\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\077\u0252\001\001\000\002\001\001\000\002\001" +
    "\001\000\052\051\134\052\043\055\107\057\013\063\u0251" +
    "\064\053\065\115\072\070\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\004\160\u024e\001\001\000" +
    "\002\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\u024d\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\052\051\134\052" +
    "\043\055\107\057\013\063\u024c\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\021\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\u024b\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\010\064\u024a\065\115\144\112" +
    "\001\001\000\052\051\134\052\043\055\107\057\013\063" +
    "\u0249\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\064\225\065\115\072\222\107\223\142" +
    "\020\144\112\145\u0247\147\221\150\220\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0225\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\u0224\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\052\051\134\052\043\055\107\057\013\063" +
    "\u0223\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\004" +
    "\045\u0217\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\077\u01ff\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\056\006\u019b\011" +
    "\110\051\134\052\043\055\107\057\013\063\015\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\u0199\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\054\046\u0193" +
    "\051\134\052\043\055\107\057\013\063\u0194\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\052\051\134\052\043" +
    "\055\107\057\013\063\u0192\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\002\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\u0191\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\u0175\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\u0174\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\052\051\u0171\052" +
    "\043\055\107\057\013\063\u0124\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\u0170\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\053\u016b\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0169\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\u0154\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\034\052\043\064\053\065\115\072\070\103\u0118" +
    "\107\u011b\122\u0119\137\u011a\140\006\142\020\144\112\150" +
    "\035\154\050\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0116\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\153\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\002\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\356\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\355\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\052\051\134\052\043\055\107\057\013\063" +
    "\354\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\052\051\134\052\043" +
    "\055\107\057\013\063\353\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\052\051\134\052\043\055\107\057\013\063\352\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\351\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\346\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\052\051\134\052\043\055\107\057\013\063\345" +
    "\064\053\065\115\072\070\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\344\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\343\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\342\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\052\051\134\052" +
    "\043\055\107\057\013\063\341\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\021\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\340\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\337\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\336\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\056\006\276\011\110\051\134\052\043\055" +
    "\107\057\013\063\015\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\274\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\273\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\024\064\225\065" +
    "\115\072\222\107\223\142\020\144\112\145\217\147\221" +
    "\150\220\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\216\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\215\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\052\051\134\052\043\055\107\057\013\063\214" +
    "\064\053\065\115\072\070\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\213\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\212\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\211\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\052\051\134\052" +
    "\043\055\107\057\013\063\210\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\021\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\207\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\064" +
    "\246\065\115\144\112\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\233\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\054" +
    "\051\134\052\043\055\107\057\013\063\231\064\053\065" +
    "\115\066\230\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\064\240\065\115\072\237\140\236\144\112\001\001" +
    "\000\002\001\001\000\010\064\241\065\115\144\112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\244\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\064\240\065\115\067\253\070" +
    "\254\071\251\072\237\103\250\140\252\144\112\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\151\267\001\001\000\002\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\257\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\043\055\107\057\013\063\265\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\054\051\134\052\043\055\107" +
    "\057\013\063\231\064\053\065\115\066\263\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\152\270\001\001\000\002\001\001\000" +
    "\024\064\240\065\115\067\272\070\254\071\251\072\237" +
    "\103\250\140\252\144\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\310\001\001" +
    "\000\004\027\277\001\001\000\004\031\300\001\001\000" +
    "\002\001\001\000\056\006\307\011\110\051\134\052\043" +
    "\055\107\057\013\063\015\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\002\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\304\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\056\006\306\011\110\051\134\052\043\055\107\057\013" +
    "\063\015\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\076\006\316\010\311\011\110\030\314" +
    "\051\134\052\043\055\107\057\013\063\015\064\053\065" +
    "\115\072\070\102\064\103\123\104\113\107\030\120\313" +
    "\121\315\122\021\126\130\127\023\130\045\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\032\317\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\052\051\134\052\043\055\107\057\013\063\323" +
    "\064\053\065\115\072\070\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\326\001\001\000\074\006\316\010\311" +
    "\011\110\051\134\052\043\055\107\057\013\063\015\064" +
    "\053\065\115\072\070\102\064\103\123\104\113\107\030" +
    "\120\313\121\315\122\021\126\130\127\023\130\045\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\004\007\330\001\001\000\074\006" +
    "\316\010\311\011\110\051\134\052\043\055\107\057\013" +
    "\063\015\064\053\065\115\072\070\102\064\103\123\104" +
    "\113\107\030\120\313\121\315\122\021\126\130\127\023" +
    "\130\045\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\350\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\022\360\103\361\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\055\367\056" +
    "\366\103\364\153\370\001\001\000\012\055\367\056\u010a" +
    "\103\364\153\370\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\055\367\056\373\103\364\153" +
    "\370\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\055\367\056\u0101\060\377\062\u0100\103" +
    "\364\153\370\001\001\000\002\001\001\000\004\061\u0105" +
    "\001\001\000\002\001\001\000\012\055\367\056\u0103\103" +
    "\364\153\370\001\001\000\002\001\001\000\012\055\367" +
    "\056\u0106\103\364\153\370\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\055\367\056\u0108\103\364\153\370" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\060\006\u0112\011\110\021\u0110\051\134\052\043" +
    "\055\107\057\013\063\015\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\004\103\u010d\001\001\000\002\001\001\000\012\055\367" +
    "\056\u010f\103\364\153\370\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u0113\001\001\000\002\001\001" +
    "\000\074\006\316\010\311\011\110\051\134\052\043\055" +
    "\107\057\013\063\015\064\053\065\115\072\070\102\064" +
    "\103\123\104\113\107\030\120\313\121\315\122\021\126" +
    "\130\127\023\130\045\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\064\240\065\115\072\237\140\u011d" +
    "\144\112\001\001\000\002\001\001\000\002\001\001\000" +
    "\056\036\u0122\037\u0120\051\u0125\052\043\055\107\057\013" +
    "\063\u0124\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\u0121\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\034\052\043\064\053" +
    "\065\115\072\070\103\u0118\106\u0126\107\u011b\122\u0127\140" +
    "\006\142\020\144\112\150\035\154\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0148\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\u0140\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\052\051\134\052\043\055\107\057\013\063" +
    "\u013e\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\052\051\134\052\043" +
    "\055\107\057\013\063\u013d\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\052\051\134\052\043\055\107\057\013\063\u013c\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\052\051\134\052\043\055\107\057" +
    "\013\063\u013b\064\053\065\115\072\070\102\064\103\123" +
    "\107\030\122\021\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\035\154\050\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\u013a\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\052\051\134\052\043\055\107\057\013\063\u0139" +
    "\064\053\065\115\072\070\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\u0138\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\u0137\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\052\051\134\052\043\055\107\057\013" +
    "\063\u0136\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\052\051\134\052" +
    "\043\055\107\057\013\063\u0135\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\021\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\052\043\064\053\065\115\072\070\103\u0118" +
    "\107\u011b\122\u0142\140\006\142\020\144\112\150\035\154" +
    "\050\001\001\000\002\001\001\000\024\064\225\065\115" +
    "\072\222\107\223\142\020\144\112\145\u0143\147\221\150" +
    "\220\001\001\000\002\001\001\000\004\054\u0144\001\001" +
    "\000\002\001\001\000\056\036\u0146\037\u0120\051\u0125\052" +
    "\043\055\107\057\013\063\u0124\064\053\065\115\072\070" +
    "\102\064\103\123\107\030\122\u0121\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\052\051\u014c\052\043\055\107\057\013\063\u0124\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\u014a\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\002\001\001\000\034\052\043\064" +
    "\053\065\115\072\070\103\u0118\106\u014d\107\u011b\122\u0127" +
    "\140\006\142\020\144\112\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\056\036\u014f\037\u0120" +
    "\051\u0125\052\043\055\107\057\013\063\u0124\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\u0121\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\056" +
    "\036\u0152\037\u0120\051\u0125\052\043\055\107\057\013\063" +
    "\u0124\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\u0121\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\036\052" +
    "\043\064\053\065\115\072\070\073\u0157\074\u0158\103\u0118" +
    "\107\u011b\122\u0159\140\006\142\020\144\112\150\035\154" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\036\052\043\064\053\065" +
    "\115\072\070\073\u015c\074\u0158\103\u0118\107\u011b\122\u0159" +
    "\140\006\142\020\144\112\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\034\052\043\064\053" +
    "\065\115\072\070\074\u015f\103\u0118\107\u011b\122\u0159\140" +
    "\006\142\020\144\112\150\035\154\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\u0162\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\002" +
    "\001\001\000\034\052\043\064\053\065\115\072\070\103" +
    "\u0118\107\u011b\122\u0164\140\006\142\020\143\u0165\144\112" +
    "\150\035\154\050\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\052\043\064\053\065\115" +
    "\072\070\103\u0118\107\u011b\122\u0168\140\006\142\020\144" +
    "\112\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\052\051\134\052\043\055\107\057\013\063" +
    "\u016c\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\052\051\134\052\043\055\107\057\013\063\u0177\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\002\001\001\000\004\023\u0179\001" +
    "\001\000\002\001\001\000\004\024\u018c\001\001\000\004" +
    "\024\u017c\001\001\000\002\001\001\000\004\024\u017e\001" +
    "\001\000\002\001\001\000\002\001\001\000\052\051\134" +
    "\052\043\055\107\057\013\063\u0186\064\053\065\115\072" +
    "\070\102\064\103\123\107\030\122\021\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\004\025\u0182\001\001\000\004\007\u0185\001\001" +
    "\000\002\001\001\000\002\001\001\000\074\006\316\010" +
    "\311\011\110\051\134\052\043\055\107\057\013\063\015" +
    "\064\053\065\115\072\070\102\064\103\123\104\113\107" +
    "\030\120\313\121\315\122\021\126\130\127\023\130\045" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\004\025\u0187\001\001\000\004" +
    "\007\u0188\001\001\000\074\006\316\010\311\011\110\051" +
    "\134\052\043\055\107\057\013\063\015\064\053\065\115" +
    "\072\070\102\064\103\123\104\113\107\030\120\313\121" +
    "\315\122\021\126\130\127\023\130\045\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\u018e\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\052\051\134\052\043\055\107\057\013\063\u0197\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\u019e\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\105" +
    "\u01a2\001\001\000\004\165\u01ab\001\001\000\006\107\u01a6" +
    "\133\u01a5\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\107\u01aa\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\043\u01ad\001\001\000\102\011\u01b6\044\u01bb\051\134" +
    "\052\043\055\107\057\013\063\015\064\053\065\115\072" +
    "\070\102\064\103\123\104\113\107\030\111\u01b2\112\u01c0" +
    "\114\u01b5\115\u01b1\121\u01bd\122\021\127\023\130\045\135" +
    "\135\136\u01b4\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\155\u01ba\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\042\u01f6\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\110\u01e7\001" +
    "\001\000\004\115\u01e2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\045\u01c4\001\001\000\002\001\001" +
    "\000\004\103\u01c5\001\001\000\004\166\u01c6\001\001\000" +
    "\002\001\001\000\012\033\u01cb\034\u01cd\035\u01ce\134\u01c8" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\035\u01d0\134\u01c8\001\001\000" +
    "\002\001\001\000\004\167\u01d2\001\001\000\004\113\u01d3" +
    "\001\001\000\002\001\001\000\004\007\u01d6\001\001\000" +
    "\002\001\001\000\074\006\316\010\311\011\110\051\134" +
    "\052\043\055\107\057\013\063\015\064\053\065\115\072" +
    "\070\102\064\103\123\104\113\107\030\120\313\121\315" +
    "\122\021\126\130\127\023\130\045\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\055\367\056\u01db\103\364\153\370\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\055\367\056\u01de\103" +
    "\364\153\370\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\055\367\056\u01e1\103\364\153\370\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\055\367\056\u01ec\103\364\153\370\001\001\000" +
    "\002\001\001\000\012\055\367\056\u01ee\103\364\153\370" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\055\367" +
    "\056\u01f4\103\364\153\370\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\055\367\056\u01fb\103" +
    "\364\153\370\001\001\000\002\001\001\000\012\055\367" +
    "\056\u01fd\103\364\153\370\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\100\u0201\144\u0200\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\052\043\064\053\065" +
    "\115\072\070\103\u0118\107\u011b\122\u020d\140\006\142\020" +
    "\144\112\150\035\154\050\001\001\000\002\001\001\000" +
    "\052\051\134\052\043\055\107\057\013\063\u0207\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\021\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\052\051\134\052\043" +
    "\055\107\057\013\063\u020a\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\101\u0213\103\u0214\144" +
    "\u0212\001\001\000\004\103\u0211\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\103\u0218\001\001" +
    "\000\004\161\u0219\001\001\000\002\001\001\000\012\033" +
    "\u021b\034\u01cd\035\u01ce\134\u01c8\001\001\000\002\001\001" +
    "\000\004\162\u021d\001\001\000\004\156\u0220\001\001\000" +
    "\004\007\u0221\001\001\000\002\001\001\000\002\001\001" +
    "\000\074\006\316\010\311\011\110\051\134\052\043\055" +
    "\107\057\013\063\015\064\053\065\115\072\070\102\064" +
    "\103\123\104\113\107\030\120\313\121\315\122\021\126" +
    "\130\127\023\130\045\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\u0228\052\043\055\107\057\013\063\u0124\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\u0227" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\002\001\001" +
    "\000\032\052\043\064\053\065\115\072\070\103\u0118\107" +
    "\u011b\122\u022a\140\006\142\020\144\112\150\035\154\050" +
    "\001\001\000\004\015\u022b\001\001\000\002\001\001\000" +
    "\034\016\u022d\052\043\064\053\065\115\072\070\103\u0118" +
    "\107\u011b\122\u022e\140\006\142\020\144\112\150\035\154" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\052\043\064\053\065\115\072\070\103\u0118\107\u011b\122" +
    "\u0230\140\006\142\020\144\112\150\035\154\050\001\001" +
    "\000\002\001\001\000\060\006\u0233\011\110\020\u0234\051" +
    "\134\052\043\055\107\057\013\063\015\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\004\007\u0235\001\001\000\002\001\001\000" +
    "\002\001\001\000\074\006\316\010\311\011\110\051\134" +
    "\052\043\055\107\057\013\063\015\064\053\065\115\072" +
    "\070\102\064\103\123\104\113\107\030\120\313\121\315" +
    "\122\021\126\130\127\023\130\045\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\016\u0239\052" +
    "\043\064\053\065\115\072\070\103\u0118\107\u011b\122\u022e" +
    "\140\006\142\020\144\112\150\035\154\050\001\001\000" +
    "\004\015\u023a\001\001\000\002\001\001\000\060\006\u0233" +
    "\011\110\020\u023c\051\134\052\043\055\107\057\013\063" +
    "\015\064\053\065\115\072\070\102\064\103\123\107\030" +
    "\122\021\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\036\012\u0242\013\u0240\052" +
    "\043\064\053\065\115\072\070\103\u0118\107\u011b\122\u0241" +
    "\140\006\142\020\144\112\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\034\013\u0245\052\043\064\053\065\115\072" +
    "\070\103\u0118\107\u011b\122\u0241\140\006\142\020\144\112" +
    "\150\035\154\050\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\054\u0248\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\007\u024f\001\001\000\074" +
    "\006\316\010\311\011\110\051\134\052\043\055\107\057" +
    "\013\063\015\064\053\065\115\072\070\102\064\103\123" +
    "\104\113\107\030\120\313\121\315\122\021\126\130\127" +
    "\023\130\045\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\100\u0201\144\u0200\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\064\240\065\115\067\u025c\070" +
    "\254\071\251\072\237\103\250\140\252\144\112\001\001" +
    "\000\004\116\u025d\001\001\000\004\117\u0261\001\001\000" +
    "\056\036\u025f\037\u0120\051\u0125\052\043\055\107\057\013" +
    "\063\u0124\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\u0121\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\141\u0262\001\001\000\002\001\001" +
    "\000\024\064\240\065\115\067\u0264\070\254\071\251\072" +
    "\237\103\250\140\252\144\112\001\001\000\004\116\u0265" +
    "\001\001\000\002\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\u0267\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\163\u026a\001\001\000" +
    "\004\131\u026c\001\001\000\004\107\u0277\001\001\000\004" +
    "\157\u026d\001\001\000\004\132\u026f\001\001\000\002\001" +
    "\001\000\004\164\u0272\001\001\000\006\107\u01a6\133\u0271" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\u0274\001\001\000\102\011\u01b6\044\u01bb\051\134\052\043" +
    "\055\107\057\013\063\015\064\053\065\115\072\070\102" +
    "\064\103\123\104\113\107\030\111\u01b2\112\u01c0\114\u01b5" +
    "\115\u01b1\121\u01bd\122\021\127\023\130\045\135\135\136" +
    "\u01b4\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\155\u0275\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\052\051\134\052\043\055\107" +
    "\057\013\063\u0279\064\053\065\115\072\070\102\064\103" +
    "\123\107\030\122\021\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\060\006\u027d\011\110\026\u027c\051\134\052\043" +
    "\055\107\057\013\063\015\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\004\007\u027e\001\001\000\002\001\001\000\002\001\001" +
    "\000\074\006\316\010\311\011\110\051\134\052\043\055" +
    "\107\057\013\063\015\064\053\065\115\072\070\102\064" +
    "\103\123\104\113\107\030\120\313\121\315\122\021\126" +
    "\130\127\023\130\045\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\035\154\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\007\u0282\001\001\000\074" +
    "\006\316\010\311\011\110\051\134\052\043\055\107\057" +
    "\013\063\015\064\053\065\115\072\070\102\064\103\123" +
    "\104\113\107\030\120\313\121\315\122\021\126\130\127" +
    "\023\130\045\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\107\u0286\001\001\000\004\144\u0287" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\u028a\001\001\000\074\006\316\010\311\011\110\051\134" +
    "\052\043\055\107\057\013\063\015\064\053\065\115\072" +
    "\070\102\064\103\123\104\113\107\030\120\313\121\315" +
    "\122\021\126\130\127\023\130\045\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\035\154\050\001\001" +
    "\000\010\123\u028d\124\u028f\125\u028e\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\125\u0290" +
    "\001\001\000\002\001\001\000\004\107\u0292\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\u0296\001\001\000\074\006\316\010\311\011\110\051" +
    "\134\052\043\055\107\057\013\063\015\064\053\065\115" +
    "\072\070\102\064\103\123\104\113\107\030\120\313\121" +
    "\315\122\021\126\130\127\023\130\045\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\035\154\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\100\u0201\144\u0200\001\001\000\002\001\001\000" +
    "\056\047\u029f\050\u029d\051\134\052\043\055\107\057\013" +
    "\063\u029e\064\053\065\115\072\070\102\064\103\123\107" +
    "\030\122\021\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\056\047\u02a1\050\u029d" +
    "\051\134\052\043\055\107\057\013\063\u029e\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\056\047\u02a3\050\u029d" +
    "\051\134\052\043\055\107\057\013\063\u029e\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\060\006\u02a7\011\110" +
    "\017\u02a5\051\134\052\043\055\107\057\013\063\015\064" +
    "\053\065\115\072\070\102\064\103\123\107\030\122\021" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\035\154\050\001\001\000\002\001\001\000\004\007\u02a8" +
    "\001\001\000\002\001\001\000\074\006\316\010\311\011" +
    "\110\051\134\052\043\055\107\057\013\063\015\064\053" +
    "\065\115\072\070\102\064\103\123\104\113\107\030\120" +
    "\313\121\315\122\021\126\130\127\023\130\045\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\u02ac\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\002\001\001\000\014\064\240\065\115" +
    "\072\237\140\u011d\144\112\001\001\000\002\001\001\000" +
    "\032\052\043\064\053\065\115\072\070\103\u0118\107\u011b" +
    "\122\u02b0\140\006\142\020\144\112\150\035\154\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\056\051" +
    "\134\052\043\055\107\057\013\063\u02c0\064\053\065\115" +
    "\072\070\075\u02bd\076\u02be\102\064\103\123\107\030\122" +
    "\021\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\035\154\050\001\001\000\002\001\001\000\004\061" +
    "\u02c7\001\001\000\034\052\043\064\053\065\115\072\070" +
    "\103\u0118\106\u02c5\107\u011b\122\u0127\140\006\142\020\144" +
    "\112\150\035\154\050\001\001\000\002\001\001\000\052" +
    "\051\134\052\043\055\107\057\013\063\u02c3\064\053\065" +
    "\115\072\070\102\064\103\123\107\030\122\021\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\035\154" +
    "\050\001\001\000\034\052\043\064\053\065\115\072\070" +
    "\103\u0118\106\u02c4\107\u011b\122\u0127\140\006\142\020\144" +
    "\112\150\035\154\050\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\043\055" +
    "\107\057\013\063\u02c9\064\053\065\115\072\070\102\064" +
    "\103\123\107\030\122\021\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\035\154\050\001\001\000\002" +
    "\001\001\000\034\052\043\064\053\065\115\072\070\103" +
    "\u0118\106\u02ce\107\u011b\122\u0127\140\006\142\020\144\112" +
    "\150\035\154\050\001\001\000\002\001\001\000\052\051" +
    "\134\052\043\055\107\057\013\063\u02cc\064\053\065\115" +
    "\072\070\102\064\103\123\107\030\122\021\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\035\154\050" +
    "\001\001\000\034\052\043\064\053\065\115\072\070\103" +
    "\u0118\106\u02cd\107\u011b\122\u0127\140\006\142\020\144\112" +
    "\150\035\154\050\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\052\043\064\053\065\115\072" +
    "\070\103\u0118\107\u011b\122\u02d5\135\u02d4\140\006\142\020" +
    "\144\112\150\035\154\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\052\051\134\052\043" +
    "\055\107\057\013\063\u02d7\064\053\065\115\072\070\102" +
    "\064\103\123\107\030\122\021\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\035\154\050\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\041\u02db\001\001" +
    "\000\002\001\001\000\002\001\001\000\056\036\u02dd\037" +
    "\u0120\051\u0125\052\043\055\107\057\013\063\u0124\064\053" +
    "\065\115\072\070\102\064\103\123\107\030\122\u0121\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\035" +
    "\154\050\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Php5AstParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Php5AstParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Php5AstParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




	class ModifierDocPair {
		public int modifier;
		public PHPDocBlock doc;
		
		public ModifierDocPair(int modifier, PHPDocBlock doc) {
			this.modifier = modifier;
			this.doc = doc;
		}
	}
	
	public Expression createDispatch(Expression dispatcher, Expression property) {

		if (property.getKind() == ASTNodeKinds.REFLECTION_CALL_EXPRESSION) {
			((ReflectionCallExpression) property).setReceiver (dispatcher);
			dispatcher = property;
		} else if (property.getKind() == ASTNodeKinds.METHOD_INVOCATION) {
			PHPCallExpression callExpression = (PHPCallExpression) property;
			dispatcher = new PHPCallExpression(dispatcher.sourceStart(), callExpression.sourceEnd(), dispatcher, callExpression.getCallName(), callExpression.getArgs());
		} else {
			dispatcher =  new FieldAccess(dispatcher.sourceStart(), property.sourceEnd(), dispatcher, property);
		}

		return dispatcher;
	}

	protected String getTokenName(int token) {
		return Php5TokenNames.getName(token);
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Php5AstParser$actions {
  private final Php5AstParser parser;

  /** Constructor */
  CUP$Php5AstParser$actions(Php5AstParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Php5AstParser$do_action(
    int                        CUP$Php5AstParser$act_num,
    java_cup.runtime.lr_parser CUP$Php5AstParser$parser,
    java.util.Stack            CUP$Php5AstParser$stack,
    int                        CUP$Php5AstParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Php5AstParser$result;

      /* select the action based on the action number */
      switch (CUP$Php5AstParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // string_st ::= T_DEFINE 
            {
              String RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = value; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(65/*string_st*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // string_st ::= T_STRING 
            {
              String RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = value; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(65/*string_st*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // tracked_variable ::= T_VARIABLE 
            {
              VariableReference RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = new VariableReference(varNameleft, varNameright, varName, PHPVariableKind.LOCAL);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(98/*tracked_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // class_constant ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              StaticConstantAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ConstantReference name = new ConstantReference(varNameleft, varNameright, varName);
	StaticConstantAccess constant = new StaticConstantAccess(classNameleft, varNameright, className, name); 
	RESULT = constant;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(100/*class_constant*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // isset_variables ::= isset_variables T_COMMA variable 
            {
              PHPCallArgumentsList RESULT = null;
		int varListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPCallArgumentsList varList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	varList.addNode(var);
	RESULT = varList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(97/*isset_variables*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // isset_variables ::= variable 
            {
              PHPCallArgumentsList RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	list.addNode(var);
	RESULT = list;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(97/*isset_variables*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // internal_functions_in_yacc ::= T_REQUIRE_ONCE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Include result = new Include(includeleft, exprright, expr, Include.IT_REQUIRE_ONCE);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // internal_functions_in_yacc ::= T_REQUIRE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Include result = new Include(includeleft, exprright, expr, Include.IT_REQUIRE);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // internal_functions_in_yacc ::= T_EVAL T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SimpleReference name = new SimpleReference(startleft, startright, "eval");
	PHPCallArgumentsList exprList = new PHPCallArgumentsList();
	exprList.addNode(expr);
	PHPCallExpression result = new PHPCallExpression(startleft, endright, null, name, exprList);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // internal_functions_in_yacc ::= T_INCLUDE_ONCE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Include result = new Include(includeleft, exprright, expr, Include.IT_INCLUDE_ONCE);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // internal_functions_in_yacc ::= T_INCLUDE expr 
            {
              Expression RESULT = null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String include = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Include result = new Include(includeleft, exprright, expr, Include.IT_INCLUDE);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // internal_functions_in_yacc ::= T_EMPTY T_OPEN_PARENTHESE variable T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SimpleReference name = new SimpleReference(startleft, startright, "empty");
	PHPCallArgumentsList varList = new PHPCallArgumentsList();
	varList.addNode(var);
	PHPCallExpression result = new PHPCallExpression(startleft, endright, null, name, varList);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // internal_functions_in_yacc ::= T_ISSET T_OPEN_PARENTHESE isset_variables T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList varList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SimpleReference name = new SimpleReference(startleft, startright, "isset");
	PHPCallExpression result = new PHPCallExpression(startleft, endright, null, name, varList);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(64/*internal_functions_in_yacc*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // encaps_var_offset ::= tracked_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		VariableReference var = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(63/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // encaps_var_offset ::= T_NUM_STRING 
            {
              Expression RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String num = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar scalar = new Scalar(numleft,numright, num, Scalar.TYPE_REAL);
	RESULT = scalar;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(63/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // encaps_var_offset ::= string_st 
            {
              Expression RESULT = null;
		int stringleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar scalar = new Scalar(stringleft,stringright, string, Scalar.TYPE_STRING);
	RESULT = scalar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(63/*encaps_var_offset*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // encaps_var ::= T_CURLY_OPEN_WITH_DOLAR variable T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReflectionVariableReference ref = new ReflectionVariableReference(startleft, endright, var);
	RESULT = ref;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME T_OPEN_RECT expr T_CLOSE_RECT T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference indexedVar = new ArrayVariableReference(startleft, endright, varName, index, ArrayVariableReference.VARIABLE_ARRAY);
	RESULT = indexedVar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReflectionVariableReference var = new ReflectionVariableReference(startleft, endright, expr);
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // encaps_var ::= tracked_variable T_OBJECT_OPERATOR string_st 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		VariableReference var = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int stringleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference property = new VariableReference(stringleft, stringright, string);
	Expression dispatch = parser.createDispatch(var, property);
	RESULT = dispatch;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // encaps_var ::= tracked_variable T_OPEN_RECT encaps_var_offset T_CLOSE_RECT 
            {
              Expression RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		VariableReference varName = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference var = new ArrayVariableReference(varNameleft, endright, varName.getName(), index, ArrayVariableReference.VARIABLE_ARRAY);
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // encaps_var ::= tracked_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		VariableReference var = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(62/*encaps_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // encaps_list ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(61/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int stringleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int stringright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String string = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar scalar = new Scalar(stringleft, stringright, string, string == null ? Scalar.TYPE_UNKNOWN : Scalar.TYPE_STRING);
	list.add(scalar);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(61/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // encaps_list ::= encaps_list encaps_var 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.add(var);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(61/*encaps_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // non_empty_array_pair_list ::= T_REFERENCE w_variable 
            {
              List RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ReferenceExpression ref = new ReferenceExpression(startleft, varright, var);
	ArrayElement element = new ArrayElement(startleft, varright, ref);	
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              List RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ReferenceExpression value = new ReferenceExpression(startleft, varright, var);
	ArrayElement element = new ArrayElement(keyleft, varright, key, value);	
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA T_REFERENCE w_variable 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReferenceExpression ref = new ReferenceExpression(startleft, varright, var);
	ArrayElement element = new ArrayElement(startleft, varright, ref);	
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReferenceExpression value = new ReferenceExpression(startleft, varright, var);
	ArrayElement element = new ArrayElement(keyleft, varright, key, value);	
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // non_empty_array_pair_list ::= expr 
            {
              List RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ArrayElement element = new ArrayElement(exprleft, exprright, expr);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW expr 
            {
              List RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ArrayElement element = new ArrayElement(keyleft, valueright, key, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ArrayElement element = new ArrayElement(exprleft, exprright, expr);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW expr 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ArrayElement element = new ArrayElement(keyleft, valueright, key, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(60/*non_empty_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // array_pair_list ::= non_empty_array_pair_list possible_comma 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(59/*array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // array_pair_list ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(59/*array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // assignment_list_element ::= 
            {
              Expression RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(58/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // assignment_list_element ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List varList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ListVariable vars = new ListVariable(startleft, endright, varList);
	RESULT = vars;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(58/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // assignment_list_element ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(58/*assignment_list_element*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // assignment_list ::= assignment_list_element 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List listElements = new LinkedList();
	if (var != null) {
		listElements.add(var);	
	}
	RESULT = listElements;
	;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(57/*assignment_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // assignment_list ::= assignment_list T_COMMA assignment_list_element 
            {
              List RESULT = null;
		int listElementsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listElementsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List listElements = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int elementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int elementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression element = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if (element != null) {
		listElements.add(element);
	}
	RESULT = listElements;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(57/*assignment_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // simple_indirect_reference ::= simple_indirect_reference T_DOLLAR 
            {
              Integer RESULT = null;
		int refleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Integer ref = (Integer)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = new Integer(1 + ref.intValue());

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(56/*simple_indirect_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // simple_indirect_reference ::= T_DOLLAR 
            {
              Integer RESULT = null;
		
	RESULT = new Integer(1);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(56/*simple_indirect_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // variable_name ::= T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = new ReflectionVariableReference(startleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(55/*variable_name*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // variable_name ::= string_st 
            {
              Expression RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = new SimpleReference(varNameleft, varNameright, varName); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(55/*variable_name*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // object_dim_list ::= variable_name 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(54/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // object_dim_list ::= object_dim_list T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression varArray;
	if(var.getKind() == ExpressionConstants.E_IDENTIFIER) { // VariableReference - $a
		varArray = new ArrayVariableReference(varleft, endright, ((SimpleReference)var).getName(), index, ArrayVariableReference.VARIABLE_HASHTABLE);
	} else {
		varArray = new ReflectionArrayVariableReference(varleft, endright, var, index, ReflectionArrayVariableReference.VARIABLE_HASHTABLE);
	}
	RESULT = varArray;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(54/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // object_dim_list ::= object_dim_list T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression varArray;
	if(var.getKind() == ExpressionConstants.E_IDENTIFIER) { // VariableReference - $a
		varArray = new ArrayVariableReference(varleft, endright, ((SimpleReference)var).getName(), index, ArrayVariableReference.VARIABLE_ARRAY);
	} else {
		varArray = new ReflectionArrayVariableReference(varleft, endright, var, index, ReflectionArrayVariableReference.VARIABLE_ARRAY);
	}
	RESULT = varArray;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(54/*object_dim_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // object_property ::= variable_without_objects 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(53/*object_property*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // object_property ::= object_dim_list 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(53/*object_property*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // dim_offset ::= expr 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = expr; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(52/*dim_offset*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // dim_offset ::= 
            {
              Expression RESULT = null;
		 
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(52/*dim_offset*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // compound_variable ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReflectionVariableReference var = new ReflectionVariableReference(startleft, endright, expr);
	RESULT = var;	 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(51/*compound_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // compound_variable ::= tracked_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		VariableReference var = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(51/*compound_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // reference_variable ::= compound_variable 
            {
              Expression RESULT = null;
		int comp_varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int comp_varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression comp_var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = comp_var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(50/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // reference_variable ::= reference_variable T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression varName = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression var;
	if(varName.getKind() == ExpressionConstants.E_IDENTIFIER) { // VariableReference - $a
		var = new ArrayVariableReference(varNameleft, endright, ((SimpleReference)varName).getName(), index, ArrayVariableReference.VARIABLE_HASHTABLE);
	} else {
		var = new ReflectionArrayVariableReference(varNameleft, endright, varName, index, ReflectionArrayVariableReference.VARIABLE_HASHTABLE);
	}
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(50/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // reference_variable ::= reference_variable T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              Expression RESULT = null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression varName = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int indexleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int indexright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression index = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression var;
	if(varName.getKind() == ExpressionConstants.E_IDENTIFIER) { // VariableReference - $a
		var = new ArrayVariableReference(varNameleft, endright, ((SimpleReference)varName).getName(), index, ArrayVariableReference.VARIABLE_ARRAY);
	} else {
		var = new ReflectionArrayVariableReference(varNameleft, endright, varName, index, ReflectionArrayVariableReference.VARIABLE_ARRAY);
	}
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(50/*reference_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // base_variable ::= static_member 
            {
              Expression RESULT = null;
		int staticFieldAccessleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int staticFieldAccessright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		StaticFieldAccess staticFieldAccess = (StaticFieldAccess)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = staticFieldAccess;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(102/*base_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // base_variable ::= simple_indirect_reference reference_variable 
            {
              Expression RESULT = null;
		int ref_countleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int ref_countright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Integer ref_count = (Integer)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// the ref_count counts the number of reflection (DOLLAR sign) so now we should 
	// accomulate the dolars into reflection variables
	Expression finalVar = var;
	for (int i=0; i<ref_count.intValue(); i++) {
		finalVar = new ReflectionVariableReference(ref_countright - i - 1, varright, finalVar);				
	}
	RESULT = finalVar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(102/*base_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // base_variable ::= reference_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(102/*base_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // base_variable_with_function_calls ::= function_call 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(106/*base_variable_with_function_calls*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // base_variable_with_function_calls ::= base_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(106/*base_variable_with_function_calls*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // static_member ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects 
            {
              StaticFieldAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	StaticFieldAccess staticFieldAccess = new StaticFieldAccess(classNameleft, varright, className, var);
	RESULT = staticFieldAccess;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(96/*static_member*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // variable_without_objects ::= simple_indirect_reference reference_variable 
            {
              Expression RESULT = null;
		int ref_countleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int ref_countright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Integer ref_count = (Integer)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// the ref_count counts the number of reflection (DOLLAR sign) so now we should 
	// accomulate the dolars into reflection variables
	Expression finalVar = var;
	for (int i=0; i<ref_count.intValue(); i++) {
		finalVar = new ReflectionVariableReference(ref_countright - i - 1, varright, finalVar);				
	}
	RESULT = finalVar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(94/*variable_without_objects*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // variable_without_objects ::= reference_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(94/*variable_without_objects*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // method_or_not ::= 
            {
              PHPCallArgumentsList RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(76/*method_or_not*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // method_or_not ::= T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = paramsList;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(76/*method_or_not*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // variable_property ::= T_OBJECT_OPERATOR object_property method_or_not 
            {
              Expression RESULT = null;
		int memberPropertyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int memberPropertyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression memberProperty = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression result = null;
	if (paramsList == null) {
		result = memberProperty;
	} else {
		if (memberProperty.getClass().equals(SimpleReference.class)) {
			result = new PHPCallExpression(memberPropertyleft, paramsListright, null, (SimpleReference)memberProperty, paramsList);
		} else {
			result = new ReflectionCallExpression(memberPropertyleft, paramsListright, null, memberProperty, paramsList);
		}
	}
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(95/*variable_property*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // variable_properties ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(77/*variable_properties*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // variable_properties ::= variable_properties variable_property 
            {
              List RESULT = null;
		int variablesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int variablesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List variables = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int variablePropertyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int variablePropertyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression variableProperty = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	variables.add(variableProperty);
	RESULT = variables;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(77/*variable_properties*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // variable ::= base_variable_with_function_calls 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(80/*variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // variable ::= base_variable_with_function_calls T_OBJECT_OPERATOR object_property method_or_not variable_properties 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int memberPropertyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int memberPropertyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression memberProperty = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int propertyListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int propertyListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List propertyList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// get the last property 
	Expression firstVarProperty = null;
	if (paramsList == null) {
		firstVarProperty = memberProperty;
	} else {
		if (memberProperty.getClass().equals(SimpleReference.class)) {
			firstVarProperty = new PHPCallExpression(memberPropertyleft, paramsListright, null, (SimpleReference)memberProperty, paramsList);
		} else {
			firstVarProperty = new ReflectionCallExpression(memberPropertyleft, paramsListright, null, memberProperty, paramsList);
		}
	}

	// then get the aggregated list of properties (->...->...->...)
	LinkedList list = (LinkedList) propertyList;
	list.addFirst(firstVarProperty);
	
	// now create the dispatch(es) nodes 
	Expression dispatcher = var;
	
	Iterator listIt = list.iterator();
	while (listIt.hasNext()) {
		Expression property = (Expression)listIt.next();
		dispatcher = parser.createDispatch(dispatcher, property);
	}

	RESULT = dispatcher;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(80/*variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // rw_variable ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(93/*rw_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // w_variable ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(68/*w_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // r_variable ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(91/*r_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // expr ::= expr_without_variable 
            {
              Expression RESULT = null;
		int ewvleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int ewvright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression ewv = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = ewv; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(49/*expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // expr ::= r_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 RESULT = var; 
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(49/*expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // non_empty_static_array_pair_list ::= static_scalar 
            {
              List RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ArrayElement element = new ArrayElement(valueleft, valueright, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(48/*non_empty_static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // non_empty_static_array_pair_list ::= static_scalar T_DOUBLE_ARROW static_scalar 
            {
              List RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ArrayElement element = new ArrayElement(keyleft, valueright, key, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(48/*non_empty_static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ArrayElement element = new ArrayElement(valueleft, valueright, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(48/*non_empty_static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar T_DOUBLE_ARROW static_scalar 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression key = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ArrayElement element = new ArrayElement(keyleft, valueright, key, value);
	list.add(element);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(48/*non_empty_static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // possible_comma ::= T_COMMA 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(47/*possible_comma*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // possible_comma ::= 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(47/*possible_comma*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // static_array_pair_list ::= non_empty_static_array_pair_list possible_comma 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(46/*static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // static_array_pair_list ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(46/*static_array_pair_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // scalar ::= T_START_HEREDOC encaps_list T_END_HEREDOC 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Quote hereDoc = new Quote(startleft, endright, list, Quote.QT_HEREDOC);
	RESULT = hereDoc;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // scalar ::= T_QUATE encaps_list T_QUATE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Quote quote = new Quote(startleft, endright, list, Quote.QT_QUOTE);
	RESULT = quote;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // scalar ::= common_scalar 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Scalar scalar = (Scalar)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = scalar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // scalar ::= class_constant 
            {
              Expression RESULT = null;
		int classConstantleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classConstantright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		StaticConstantAccess classConstant = (StaticConstantAccess)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = classConstant;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // scalar ::= T_STRING_VARNAME 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// TODO: check if this is a scalar
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_STRING);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // scalar ::= string_st 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_STRING);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(45/*scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // static_class_constant ::= T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              StaticConstantAccess RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ConstantReference vname = new ConstantReference(varNameleft, varNameright, varName);
	TypeReference cname = new TypeReference(classNameleft, classNameright, className);
	StaticConstantAccess constant = new StaticConstantAccess(classNameleft, varNameright, cname, vname); 
	RESULT = constant;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(105/*static_class_constant*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // static_scalar ::= static_class_constant 
            {
              Expression RESULT = null;
		int classConstantleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classConstantright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		StaticConstantAccess classConstant = (StaticConstantAccess)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = classConstant;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // static_scalar ::= T_ARRAY T_OPEN_PARENTHESE static_array_pair_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ArrayCreation array = new ArrayCreation(startleft, endright, list);
	RESULT = array;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // static_scalar ::= T_MINUS static_scalar 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	UnaryOperation op = new UnaryOperation(startleft, exprright, expr, UnaryOperation.OP_MINUS);
	RESULT = op;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // static_scalar ::= T_PLUS static_scalar 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	UnaryOperation op = new UnaryOperation(startleft, exprright, expr, UnaryOperation.OP_PLUS);
	RESULT = op;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // static_scalar ::= string_st 
            {
              Expression RESULT = null;
		int strleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(strleft, strright, str, Scalar.TYPE_STRING);
	RESULT = s;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // static_scalar ::= common_scalar 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Scalar scalar = (Scalar)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = scalar;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(44/*static_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // common_scalar ::= T_FUNC_C 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object scalar = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, "__FUNCTION__", Scalar.TYPE_SYSTEM);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // common_scalar ::= T_METHOD_C 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object scalar = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, "__METHOD__", Scalar.TYPE_SYSTEM);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // common_scalar ::= T_CLASS_C 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object scalar = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, "__CLASS__", Scalar.TYPE_SYSTEM);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // common_scalar ::= T_FILE 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, "__FILE__", Scalar.TYPE_SYSTEM);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // common_scalar ::= T_LINE 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object scalar = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, "__LINE__", Scalar.TYPE_SYSTEM);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // common_scalar ::= T_CONSTANT_ENCAPSED_STRING 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_STRING);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // common_scalar ::= T_DNUMBER 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_REAL);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // common_scalar ::= T_LNUMBER 
            {
              Scalar RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_INT);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(43/*common_scalar*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // ctor_arguments ::= T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(42/*ctor_arguments*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // ctor_arguments ::= 
            {
              PHPCallArgumentsList RESULT = null;
		
	RESULT = new PHPCallArgumentsList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(42/*ctor_arguments*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // exit_expr ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = expr;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(41/*exit_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // exit_expr ::= T_OPEN_PARENTHESE T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(41/*exit_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // exit_expr ::= 
            {
              Expression RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(41/*exit_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // dynamic_class_name_variable_property ::= T_OBJECT_OPERATOR object_property 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(104/*dynamic_class_name_variable_property*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // dynamic_class_name_variable_properties ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(103/*dynamic_class_name_variable_properties*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // dynamic_class_name_variable_properties ::= dynamic_class_name_variable_properties dynamic_class_name_variable_property 
            {
              List RESULT = null;
		int variablesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int variablesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List variables = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	variables.add(var);
	RESULT = variables;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(103/*dynamic_class_name_variable_properties*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // dynamic_class_name_reference ::= base_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	 RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(101/*dynamic_class_name_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // dynamic_class_name_reference ::= base_variable T_OBJECT_OPERATOR object_property dynamic_class_name_variable_properties 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int firstVarPropertyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int firstVarPropertyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression firstVarProperty = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int propertyListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int propertyListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List propertyList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// then get the aggregated list of properties (->...->...->...)
	LinkedList list = (LinkedList) propertyList;
	list.addFirst(firstVarProperty);
	
	// now create the dispatch(es) nodes 
	Expression dispatcher = var;

	Iterator listIt = list.iterator();
	while (listIt.hasNext()) {
		Expression property = (Expression)listIt.next();
		dispatcher = parser.createDispatch(dispatcher, property);
	}	
	
	RESULT = dispatcher;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(101/*dynamic_class_name_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // class_name_reference ::= dynamic_class_name_reference 
            {
              Expression RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = className;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(99/*class_name_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // class_name_reference ::= T_STRING 
            {
              Expression RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	TypeReference classReference = new TypeReference(classNameleft, classNameright, className);
	RESULT = classReference;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(99/*class_name_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // fully_qualified_class_name ::= T_STRING 
            {
              TypeReference RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	TypeReference name = new TypeReference(classNameleft, classNameright, className);
	RESULT = name;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(69/*fully_qualified_class_name*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // function_call ::= variable_without_objects T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int reflectionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int reflectionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression reflectionName = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList parameters = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = new ReflectionCallExpression(reflectionNameleft, endright, null, reflectionName, parameters); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(40/*function_call*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int reflectionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int reflectionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression reflectionName = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList parameters = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	ReflectionStaticMethodInvocation functionInvocation = new ReflectionStaticMethodInvocation(classNameleft, endright, className, reflectionName, parameters); 
	RESULT = functionInvocation;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(40/*function_call*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList parameters = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	SimpleReference name = new SimpleReference(functionNameleft, functionNameright, functionName);
	StaticMethodInvocation staticMethodInvocation = new StaticMethodInvocation(classNameleft, endright, className, name, parameters); 
	RESULT = staticMethodInvocation;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(40/*function_call*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // function_call ::= string_st T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPCallArgumentsList parameters = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	SimpleReference name = new SimpleReference(functionNameleft, functionNameright, functionName);
	RESULT = new PHPCallExpression(functionNameleft, endright, null, name, parameters); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(40/*function_call*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // expr_without_variable ::= T_PRINT expr 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	if (expr != null) {
		list.addNode(expr);
	}
	SimpleReference name = new SimpleReference(startleft, startright, "print");
	PHPCallExpression result = new PHPCallExpression(startleft, exprright, null, name, list);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // expr_without_variable ::= T_BACKQUATE encaps_list T_BACKQUATE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	BackTickExpression backTickExpression = new BackTickExpression(startleft, endright, list);
	RESULT = backTickExpression;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // expr_without_variable ::= T_ARRAY T_OPEN_PARENTHESE array_pair_list T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression expr = new ArrayCreation(startleft, endright, list);
	RESULT = expr;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // expr_without_variable ::= scalar 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression scalar = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = scalar; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // expr_without_variable ::= T_AT expr 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	IgnoreError ignoreError = new IgnoreError(startleft, exprright, expr);
	RESULT = ignoreError;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // expr_without_variable ::= T_EXIT exit_expr 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	if (expr != null) {
		list.addNode(expr);
	}
	SimpleReference functionName = new SimpleReference(startleft, startright, start);
	PHPCallExpression result = new PHPCallExpression(startleft, exprright, null, functionName, list);
	RESULT = result;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // expr_without_variable ::= T_UNSET_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_UNSET); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // expr_without_variable ::= T_BOOL_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_BOOL); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // expr_without_variable ::= T_OBJECT_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_OBJECT); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // expr_without_variable ::= T_ARRAY_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_ARRAY); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // expr_without_variable ::= T_STRING_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_STRING); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // expr_without_variable ::= T_DOUBLE_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_REAL); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // expr_without_variable ::= T_INT_CAST expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new CastExpression(tokenleft, exprright, expr , CastExpression.TYPE_INT); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // expr_without_variable ::= internal_functions_in_yacc 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = expr;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // expr_without_variable ::= expr T_QUESTION_MARK expr T_NEKUDOTAIM expr 
            {
              Expression RESULT = null;
		int conditionleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int conditionright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Expression condition = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int ifTrueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int ifTrueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression ifTrue = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int ifFalseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int ifFalseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression ifFalse = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ConditionalExpression(conditionleft, ifFalseright, condition , ifTrue, ifFalse); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // expr_without_variable ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = expr; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // expr_without_variable ::= expr T_INSTANCEOF class_name_reference 
            {
              Expression RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InstanceOfExpression(exprleft, classNameright, expr , className); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // expr_without_variable ::= expr T_IS_GREATER_OR_EQUAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_GREATER_OR_EQUAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // expr_without_variable ::= expr T_LGREATER expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_LGREATER, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // expr_without_variable ::= expr T_IS_SMALLER_OR_EQUAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_SMALLER_OR_EQUAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // expr_without_variable ::= expr T_RGREATER expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_RGREATER, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // expr_without_variable ::= expr T_IS_NOT_EQUAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_NOT_EQUAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // expr_without_variable ::= expr T_IS_EQUAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_EQUAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // expr_without_variable ::= expr T_IS_NOT_IDENTICAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_NOT_IDENTICAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // expr_without_variable ::= expr T_IS_IDENTICAL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_IS_IDENTICAL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // expr_without_variable ::= T_TILDA expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new UnaryOperation(tokenleft, exprright, expr , UnaryOperation.OP_TILDA); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // expr_without_variable ::= T_NOT expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new UnaryOperation(tokenleft, exprright, expr , UnaryOperation.OP_NOT); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // expr_without_variable ::= T_MINUS expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new UnaryOperation(tokenleft, exprright, expr , UnaryOperation.OP_MINUS); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // expr_without_variable ::= T_PLUS expr 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new UnaryOperation(tokenleft, exprright, expr , UnaryOperation.OP_PLUS); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // expr_without_variable ::= expr T_SR expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_SR, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // expr_without_variable ::= expr T_SL expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_SL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // expr_without_variable ::= expr T_PRECENT expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_MOD, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // expr_without_variable ::= expr T_DIV expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_DIV, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // expr_without_variable ::= expr T_TIMES expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_MUL, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // expr_without_variable ::= expr T_MINUS expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_MINUS, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // expr_without_variable ::= expr T_PLUS expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_PLUS, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // expr_without_variable ::= expr T_NEKUDA expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_CONCAT, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // expr_without_variable ::= expr T_KOVA expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_XOR, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // expr_without_variable ::= expr T_REFERENCE expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_AND, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // expr_without_variable ::= expr T_OR expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_OR, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // expr_without_variable ::= expr T_LOGICAL_XOR expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_STRING_XOR, expr2);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // expr_without_variable ::= expr T_LOGICAL_AND expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_STRING_AND, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // expr_without_variable ::= expr T_LOGICAL_OR expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_STRING_OR, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // expr_without_variable ::= expr T_BOOLEAN_AND expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_BOOL_AND, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // expr_without_variable ::= expr T_BOOLEAN_OR expr 
            {
              Expression RESULT = null;
		int expr1left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int expr1right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr1 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int expr2left = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int expr2right = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr2 = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new InfixExpression(expr1left, expr2right, expr1 , InfixExpression.OP_BOOL_OR, expr2); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // expr_without_variable ::= T_DEC rw_variable 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new PrefixExpression(tokenleft, varright, var , PrefixExpression.OP_DEC); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // expr_without_variable ::= rw_variable T_DEC 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new PostfixExpression(varleft, tokenright, var , PostfixExpression.OP_DEC); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // expr_without_variable ::= T_INC rw_variable 
            {
              Expression RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new PrefixExpression(tokenleft, varright, var , PrefixExpression.OP_INC); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // expr_without_variable ::= rw_variable T_INC 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new PostfixExpression(varleft, tokenright, var , PostfixExpression.OP_INC); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // expr_without_variable ::= variable T_SR_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_SR_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // expr_without_variable ::= variable T_SL_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_SL_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // expr_without_variable ::= variable T_XOR_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_XOR_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // expr_without_variable ::= variable T_OR_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_OR_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // expr_without_variable ::= variable T_AND_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_AND_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // expr_without_variable ::= variable T_MOD_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_MOD_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // expr_without_variable ::= variable T_CONCAT_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_CONCAT_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // expr_without_variable ::= variable T_DIV_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 	
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_DIV_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // expr_without_variable ::= variable T_MUL_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_MUL_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // expr_without_variable ::= variable T_MINUS_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_MINUS_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // expr_without_variable ::= variable T_PLUS_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var , Assignment.OP_PLUS_EQUAL, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // expr_without_variable ::= T_CLONE expr 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	CloneExpression clone = new CloneExpression(startleft, exprright, expr);
	RESULT = clone;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // expr_without_variable ::= T_NEW class_name_reference ctor_arguments 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPCallArgumentsList ctor = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ClassInstanceCreation classInstanceCreation = new ClassInstanceCreation(startleft, ctorright, className, ctor);
	RESULT = classInstanceCreation;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // expr_without_variable ::= variable T_EQUAL T_REFERENCE T_NEW class_name_reference ctor_arguments 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		VarComment varComment = (VarComment)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int reftokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int reftokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object reftoken = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression className = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPCallArgumentsList ctor = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ClassInstanceCreation classInstanceCreation = new ClassInstanceCreation(startleft, ctorright, className, ctor);
	Assignment assignment = new Assignment(varleft, ctorright, var, Assignment.OP_REF_EQUAL, classInstanceCreation, varComment);
	RESULT = assignment;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // expr_without_variable ::= variable T_EQUAL T_REFERENCE variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		VarComment varComment = (VarComment)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int reftokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int reftokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object reftoken = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int refvarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int refvarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression refvar = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, refvarright, var, Assignment.OP_REF_EQUAL, refvar, varComment); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // expr_without_variable ::= variable T_EQUAL expr 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		VarComment varComment = (VarComment)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new Assignment(varleft, exprright, var, Assignment.OP_EQUAL, expr, varComment); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // expr_without_variable ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE T_EQUAL expr 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List varList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int closeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int closeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object close = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ListVariable vars = new ListVariable(startleft, closeright, varList);
	Assignment list = new Assignment(startleft, exprright, vars, Assignment.OP_EQUAL, expr);
	RESULT = list; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(39/*expr_without_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // non_empty_for_expr ::= expr 
            {
              List RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List exprList = new LinkedList();
	exprList.add(expr);
	RESULT = exprList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(38/*non_empty_for_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // non_empty_for_expr ::= non_empty_for_expr T_COMMA expr 
            {
              List RESULT = null;
		int exprListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List exprList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	exprList.add(expr);
	RESULT = exprList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(38/*non_empty_for_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // for_expr ::= non_empty_for_expr 
            {
              List RESULT = null;
		int exprListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List exprList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = exprList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(37/*for_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // for_expr ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(37/*for_expr*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // echo_expr_list ::= expr 
            {
              List RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List exprList = new LinkedList();
	exprList.add(expr);
	RESULT = exprList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(36/*echo_expr_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // echo_expr_list ::= echo_expr_list T_COMMA expr 
            {
              List RESULT = null;
		int exprListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List exprList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	exprList.add(expr);
	RESULT = exprList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(36/*echo_expr_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // class_constant_declaration ::= T_CONST T_STRING T_EQUAL static_scalar 
            {
              List RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String constName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	ConstantReference constId = new ConstantReference(constNameleft, constNameright, constName);
	list.add(new ASTNode[] {constId, expr, value});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(71/*class_constant_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // class_constant_declaration ::= class_constant_declaration T_COMMA T_STRING T_EQUAL static_scalar 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String constName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ConstantReference constId = new ConstantReference(constNameleft, constNameright, constName);
	list.add(new ASTNode[] {constId, expr});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(71/*class_constant_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // class_variable_declaration ::= T_VARIABLE T_EQUAL static_scalar 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	VariableReference varId = new VariableReference(varleft, varright, var);
	list.add(new ASTNode[] {varId, expr});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(70/*class_variable_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // class_variable_declaration ::= T_VARIABLE 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	VariableReference varId = new VariableReference(varleft, varright, var);
	list.add(new ASTNode[] {varId, null});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(70/*class_variable_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference varId = new VariableReference(varleft, varright, var);
	list.add(new ASTNode[] {varId, expr});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(70/*class_variable_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference varId = new VariableReference(varleft, varright, var);
	list.add(new ASTNode[] {varId, null});
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(70/*class_variable_declaration*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // member_modifier ::= T_FINAL 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccFinal, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // member_modifier ::= T_ABSTRACT 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccAbstract, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // member_modifier ::= T_STATIC 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccStatic, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // member_modifier ::= T_PRIVATE 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccPrivate, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // member_modifier ::= T_PROTECTED 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccProtected, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // member_modifier ::= T_PUBLIC 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccPublic, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(75/*member_modifier*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // non_empty_member_modifiers ::= non_empty_member_modifiers member_modifier 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.add(modifier);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(74/*non_empty_member_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // non_empty_member_modifiers ::= member_modifier 
            {
              List RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(modifier);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(74/*non_empty_member_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // method_modifiers ::= non_empty_member_modifiers 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int result = 0;
	PHPDocBlock docBlock = null;
	for (Iterator it = list.iterator(); it.hasNext() ; ) {
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)it.next();
		if (modifier.doc != null) {
			docBlock = modifier.doc;
		}
		result |= modifier.modifier;
	}
	RESULT = parser.new ModifierDocPair(result, docBlock);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(72/*method_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // method_modifiers ::= 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(72/*method_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // variable_modifiers ::= T_VAR 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock var = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccPublic, var);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(92/*variable_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // variable_modifiers ::= non_empty_member_modifiers 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int result = 0;
	PHPDocBlock docBlock = null;
	for (Iterator it = list.iterator(); it.hasNext() ; ) {
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)it.next();
		if (modifier.doc != null) {
			docBlock = modifier.doc;
		}
		result |= modifier.modifier;
	}
	RESULT = parser.new ModifierDocPair(result, docBlock);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(92/*variable_modifiers*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // method_body ::= 
            {
              Statement RESULT = null;
		
	parser.reportError();
	RESULT = new ASTError(0,0);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(73/*method_body*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // method_body ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPMethodDeclaration methodDeclaration = (PHPMethodDeclaration)parser.declarations.peek();
	methodDeclaration.getBody().setStart(startleft);
	methodDeclaration.getBody().setEnd(endright);
	methodDeclaration.getBody().getStatements().clear();
	methodDeclaration.getBody().acceptStatements(statementList);
	methodDeclaration.setEnd(endright);
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(73/*method_body*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // method_body ::= T_SEMICOLON 
            {
              Statement RESULT = null;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPMethodDeclaration methodDeclaration = (PHPMethodDeclaration)parser.declarations.peek();
	methodDeclaration.getBody().setStart(endleft);
	methodDeclaration.getBody().setEnd(endright);
	methodDeclaration.setEnd(endright);
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(73/*method_body*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // class_statement ::= error 
            {
              Object RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError();
	ASTError error = new ASTError(theErrorleft, theErrorright);
	parser.addDeclarationStatement(error);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(34/*class_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // class_statement ::= T_VAR_COMMENT 
            {
              Object RESULT = null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		


              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(34/*class_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // class_statement ::= method_modifiers T_FUNCTION is_reference string_st NT$6 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$7 method_body 
            {
              Object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int paramListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int paramListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List paramList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int closeParentheseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int closeParentheseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object closeParenthese = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int bodyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int bodyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement body = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPMethodDeclaration methodDeclaration = (PHPMethodDeclaration)parser.declarations.pop();
	if(body instanceof ASTError) {
		parser.reportError(new ASTError(methodDeclaration.sourceEnd() - 1, methodDeclaration.sourceEnd()), "syntax error, unfinished method declaration");
	}
	TypeDeclaration type = (TypeDeclaration)parser.declarations.peek();
	methodDeclaration.setDeclaringTypeName(type.getName());

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(34/*class_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // NT$7 ::= 
            {
              Object RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int paramListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int paramListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List paramList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int closeParentheseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int closeParentheseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object closeParenthese = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	PHPMethodDeclaration functionDeclaration = (PHPMethodDeclaration)parser.declarations.peek();
	functionDeclaration.acceptArguments(paramList);
	functionDeclaration.setEnd(closeParentheseright);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(117/*NT$7*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // NT$6 ::= 
            {
              Object RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	int methodStart = modifier == null ? startleft : modifierleft;
	int modifierValue = modifier == null ? Modifiers.AccPublic : modifier.modifier;
	PHPDocBlock docBlock = start;
	if (modifier != null && modifier.doc != null) {
		docBlock = modifier.doc;
	}
	PHPMethodDeclaration methodDeclaration = new PHPMethodDeclaration(methodStart, functionNameright, functionNameleft, functionNameright, functionName, modifierValue, null, new Block(functionNameright, functionNameright, null), isReference.booleanValue(), docBlock);
	parser.addDeclarationStatement(methodDeclaration);
	parser.declarations.push(methodDeclaration);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(116/*NT$6*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // class_statement ::= class_constant_declaration T_SEMICOLON 
            {
              Object RESULT = null;
		int decListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int decListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List decList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	Iterator i = decList.iterator();
	while (i.hasNext()) {
		ASTNode[] decl = (ASTNode[]) i.next();
		ConstantReference constant = (ConstantReference)decl[0];
		Expression initializer = (Expression)decl[1];
		
		PHPDocBlock docBlock = null;
		if (decl.length == 3) {
			docBlock = (PHPDocBlock)decl[2];
		}
		int start = constant.sourceStart();
		int end = (initializer == null ? constant.sourceEnd() : initializer.sourceEnd());
		parser.addDeclarationStatement(new ClassConstantDeclaration(constant, initializer, start, end, docBlock));
	}

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(34/*class_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // class_statement ::= variable_modifiers class_variable_declaration T_SEMICOLON 
            {
              Object RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int decListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int decListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List decList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	Iterator i = decList.iterator();
	while (i.hasNext()) {
		ASTNode[] decl = (ASTNode[]) i.next();
		VariableReference variable = (VariableReference)decl[0];
		Expression initializer = (Expression)decl[1];
		int start = variable.sourceStart();
		int end = (initializer == null ? variable.sourceEnd() : initializer.sourceEnd());
		parser.addDeclarationStatement(new PHPFieldDeclaration(variable, initializer, start, end, modifier.modifier, modifierleft, modifier.doc));
	}

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(34/*class_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // class_statement_list ::= 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(33/*class_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // class_statement_list ::= class_statement_list class_statement 
            {
              Object RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object list = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int classStatementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classStatementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object classStatement = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if(!(parser.declarations.peek() instanceof TypeDeclaration)) {
		parser.declarations.pop();
	}

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(33/*class_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // static_var_list ::= T_VARIABLE T_EQUAL static_scalar 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		VarComment varComment = (VarComment)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference v = new VariableReference(varleft, varright, var); 
	Assignment assignment = new Assignment(varleft, exprright, v, Assignment.OP_EQUAL, expr, varComment); 
	List list = new LinkedList();
	list.add(assignment);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(32/*static_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // static_var_list ::= T_VARIABLE 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference v = new VariableReference(varleft, varright, var); 
	List list = new LinkedList();
	list.add(v);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(32/*static_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // static_var_list ::= static_var_list T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		VarComment varComment = (VarComment)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference v = new VariableReference(varleft, varright, var); 
	Assignment assignment = new Assignment(varleft, exprright, v, Assignment.OP_EQUAL, expr, varComment); 
	list.add(assignment);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(32/*static_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // static_var_list ::= static_var_list T_COMMA T_VARIABLE 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference v = new VariableReference(varleft, varright, var); 
	list.add(v);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(32/*static_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // global_var ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression varName = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReflectionVariableReference var = new ReflectionVariableReference(startleft, endright, varName);
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(31/*global_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // global_var ::= T_DOLLAR r_variable 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ReflectionVariableReference ref = new ReflectionVariableReference(startleft, varright, var);
	RESULT = ref;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(31/*global_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // global_var ::= T_VARIABLE 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	VariableReference variable = new VariableReference(varleft, varright, var);
	RESULT = variable;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(31/*global_var*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // global_var_list ::= global_var 
            {
              List RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(var);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(30/*global_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // global_var_list ::= global_var_list T_COMMA global_var 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.add(var);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(30/*global_var_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA T_REFERENCE w_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression var_ref = new ReferenceExpression(startleft, varright, var);
	paramsList.addNode(var_ref);
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA variable 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	paramsList.addNode(var);	
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA expr_without_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	paramsList.addNode(var);
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // non_empty_function_call_parameter_list ::= T_REFERENCE w_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList paramsList = new PHPCallArgumentsList();
	Expression var_ref = new ReferenceExpression(startleft, varright, var);
	paramsList.addNode(var_ref);	
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // non_empty_function_call_parameter_list ::= variable 
            {
              PHPCallArgumentsList RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList paramsList = new PHPCallArgumentsList();
	paramsList.addNode(var);	
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // non_empty_function_call_parameter_list ::= expr_without_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList paramsList = new PHPCallArgumentsList();
	paramsList.addNode(var);	
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(29/*non_empty_function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // function_call_parameter_list ::= 
            {
              PHPCallArgumentsList RESULT = null;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(28/*function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // function_call_parameter_list ::= non_empty_function_call_parameter_list 
            {
              PHPCallArgumentsList RESULT = null;
		int paramsListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int paramsListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPCallArgumentsList paramsList = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = paramsList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(28/*function_call_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // optional_class_type ::= T_ARRAY 
            {
              TypeReference RESULT = null;
		int arrayleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int arrayright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object array = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	TypeReference reference = new TypeReference(arrayleft, arrayright, "array");
	RESULT = reference;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(90/*optional_class_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // optional_class_type ::= T_STRING 
            {
              TypeReference RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	TypeReference reference = new TypeReference(classNameleft, classNameright, className);
	RESULT = reference;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(90/*optional_class_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // optional_class_type ::= 
            {
              TypeReference RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(90/*optional_class_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // parameter ::= error 
            {
              FormalParameter RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError(new ASTError(theErrorleft, theErrorright));
	RESULT = null;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(27/*parameter*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // parameter ::= optional_class_type T_REFERENCE T_VARIABLE T_EQUAL static_scalar 
            {
              FormalParameter RESULT = null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		TypeReference classType = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int refleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression scalar = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int start = classType == null ? refleft : classTypeleft;
	VariableReference v = new VariableReference(varleft, varright, var, PHPVariableKind.LOCAL);
	FormalParameter parameter = new FormalParameterByReference(start, scalarright, classType, v, scalar);
	RESULT = parameter;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(27/*parameter*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // parameter ::= optional_class_type T_VARIABLE T_EQUAL static_scalar 
            {
              FormalParameter RESULT = null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		TypeReference classType = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression scalar = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int start = classType == null ? varleft : classTypeleft;
	VariableReference v = new VariableReference(varleft, varright, var, PHPVariableKind.LOCAL);
	FormalParameter parameter = new FormalParameter(start, scalarright, classType, v, scalar);
	RESULT = parameter;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(27/*parameter*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // parameter ::= optional_class_type T_REFERENCE T_VARIABLE 
            {
              FormalParameter RESULT = null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		TypeReference classType = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int refleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int start = classType == null ? refleft : classTypeleft;
	VariableReference v = new VariableReference(varleft, varright, var, PHPVariableKind.LOCAL);
	FormalParameter parameter = new FormalParameterByReference(start, varright, classType, v);
	RESULT = parameter;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(27/*parameter*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // parameter ::= optional_class_type T_VARIABLE 
            {
              FormalParameter RESULT = null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		TypeReference classType = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	int start = classType == null ? varleft : classTypeleft;
	VariableReference v = new VariableReference(varleft, varright, var, PHPVariableKind.LOCAL);
	FormalParameter parameter = new FormalParameter(start, varright, classType, v);
	RESULT = parameter;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(27/*parameter*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // non_empty_parameter_list ::= non_empty_parameter_list T_COMMA 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int commaleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int commaright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object comma = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError(new ASTError(commaleft, commaright), "syntax error, unexpected ','");
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(26/*non_empty_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // non_empty_parameter_list ::= non_empty_parameter_list T_COMMA parameter 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int parameterleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int parameterright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		FormalParameter parameter = (FormalParameter)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if(parameter != null) {
		list.add(parameter);
	}
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(26/*non_empty_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // non_empty_parameter_list ::= parameter 
            {
              List RESULT = null;
		int parameterleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int parameterright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		FormalParameter parameter = (FormalParameter)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	if(parameter != null) {
		list.add(parameter);
	}
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(26/*non_empty_parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // parameter_list ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(25/*parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // parameter_list ::= non_empty_parameter_list 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(25/*parameter_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // new_else_single ::= T_ELSE T_NEKUDOTAIM inner_statement_list 
            {
              Statement RESULT = null;
		int colonleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int colonright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object colon = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = new Block(colonleft, statementListright, statementList);
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(24/*new_else_single*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // new_else_single ::= 
            {
              Statement RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(24/*new_else_single*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // else_single ::= T_ELSE statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(23/*else_single*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // else_single ::= 
            {
              Statement RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(23/*else_single*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // new_elseif_list ::= new_elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list 
            {
              List[] RESULT = null;
		int elseifListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int elseifListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		List[] elseifList = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int conditionleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int conditionright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression condition = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int colonleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int colonright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object colon = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
			
	Block block = new Block(colonleft, statementListright, statementList);
	((LinkedList)elseifList[0]).addFirst(condition);
	((LinkedList)elseifList[1]).addFirst(block);
	((LinkedList)elseifList[2]).addFirst(new Integer(tokenleft));

	RESULT = elseifList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(22/*new_elseif_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // new_elseif_list ::= 
            {
              List[] RESULT = null;
		
	List listConditions = new LinkedList();
	List listStatements = new LinkedList();
	List listTokens = new LinkedList();
	
	List[] returnList = new List[] { listConditions, listStatements, listTokens };
	
	RESULT = returnList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(22/*new_elseif_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // elseif_list ::= elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement 
            {
              List[] RESULT = null;
		int elseifListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int elseifListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		List[] elseifList = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int conditionleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int conditionright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression condition = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int iftrueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int iftrueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement iftrue = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
			
	((LinkedList)elseifList[0]).addFirst(condition);
	((LinkedList)elseifList[1]).addFirst(iftrue);
	((LinkedList)elseifList[2]).addFirst(new Integer(tokenleft));

	RESULT = elseifList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(21/*elseif_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // elseif_list ::= 
            {
              List[] RESULT = null;
		
	List listConditions = new LinkedList();
	List listStatements = new LinkedList();
	List listTokens = new LinkedList();
	
	List[] returnList = new List[] { listConditions, listStatements, listTokens };
	
	RESULT = returnList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(21/*elseif_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // while_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDWHILE T_SEMICOLON 
            {
              Statement RESULT = null;
		int colonleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int colonright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object colon = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		
	Block block = new Block(colonleft, statementListright, statementList);
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(20/*while_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // while_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(20/*while_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // case_separator ::= T_SEMICOLON 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(19/*case_separator*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // case_separator ::= T_NEKUDOTAIM 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(19/*case_separator*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // case_list ::= case_list T_DEFAULT case_separator inner_statement_list 
            {
              List RESULT = null;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List statements = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SwitchCase switchCase = new SwitchCase(tokenleft, statementsright, null, statements, true);
	if (caseList == null) {
		caseList = new LinkedList(); // of SwitchCase
	}
	caseList.add(switchCase);
	RESULT = caseList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(18/*case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // case_list ::= case_list T_CASE expr case_separator inner_statement_list 
            {
              List RESULT = null;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List statements = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SwitchCase switchCase = new SwitchCase(tokenleft, statementsright, expr, statements, false);
	if (caseList == null) {
		caseList = new LinkedList(); // of switchCase
	}
	caseList.add(switchCase);
	RESULT = caseList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(18/*case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // case_list ::= 
            {
              List RESULT = null;
		
	RESULT = new LinkedList(); // of SwitchCase

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(18/*case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // switch_case_list ::= T_NEKUDOTAIM T_SEMICOLON case_list T_ENDSWITCH T_SEMICOLON 
            {
              Block RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = new Block(startleft, endright, caseList);	
	RESULT = block; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(17/*switch_case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // switch_case_list ::= T_NEKUDOTAIM case_list T_ENDSWITCH T_SEMICOLON 
            {
              Block RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = new Block(startleft, endright, caseList);	
	RESULT = block; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(17/*switch_case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // switch_case_list ::= T_CURLY_OPEN T_SEMICOLON case_list T_CURLY_CLOSE 
            {
              Block RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = new Block(startleft, endright, caseList);	
	RESULT = block; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(17/*switch_case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // switch_case_list ::= T_CURLY_OPEN case_list T_CURLY_CLOSE 
            {
              Block RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int caseListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int caseListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List caseList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = new Block(startleft, endright, caseList);	
	RESULT = block; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(17/*switch_case_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // declare_list ::= declare_list T_COMMA string_st T_EQUAL static_scalar 
            {
              List[] RESULT = null;
		int listsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int listsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List[] lists = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String key = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	lists[0].add(key);
	lists[1].add(value);
	RESULT = lists;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(16/*declare_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // declare_list ::= string_st T_EQUAL static_scalar 
            {
              List[] RESULT = null;
		int keyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int keyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		String key = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression value = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List listKeys = new LinkedList();
	List listValues = new LinkedList();
	
	listKeys.add(key);
	listValues.add(value);

	List[] returnList = new List[] { listKeys, listValues };
	RESULT = returnList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(16/*declare_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // declare_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDDECLARE T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		
	Block block = new Block(startleft, statementListright, statementList);
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(15/*declare_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // declare_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(15/*declare_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // foreach_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOREACH T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		
	Block block = new Block(startleft, statementListright, statementList);
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(14/*foreach_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // foreach_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(14/*foreach_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // for_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOR T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		
	Block block = new Block(startleft, statementListright, statementList);
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(13/*for_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // for_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(13/*for_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // foreach_variable ::= T_REFERENCE variable 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	ReferenceExpression reference = new ReferenceExpression (startleft, varright, var);
	RESULT = reference;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(12/*foreach_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // foreach_variable ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(12/*foreach_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // foreach_optional_arg ::= T_DOUBLE_ARROW foreach_variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(11/*foreach_optional_arg*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // foreach_optional_arg ::= 
            {
              Expression RESULT = null;
		 
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(11/*foreach_optional_arg*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // interface_list ::= error 
            {
              List RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError(new ASTError(theErrorleft, theErrorright));
	RESULT = new LinkedList();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(89/*interface_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // interface_list ::= interface_list T_COMMA error 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int commaleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int commaright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object comma = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError(new ASTError(theErrorleft, theErrorright));
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(89/*interface_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // interface_list ::= interface_list T_COMMA fully_qualified_class_name 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.add(className);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(89/*interface_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // interface_list ::= fully_qualified_class_name 
            {
              List RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	if(className != null) {
		list.add(className);
	}
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(89/*interface_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // implements_list ::= T_IMPLEMENTS interface_list 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(88/*implements_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // implements_list ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(88/*implements_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // interface_extends_list ::= T_EXTENDS interface_list 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(67/*interface_extends_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // interface_extends_list ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(67/*interface_extends_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // interface_entry ::= T_INTERFACE 
            {
              PHPDocBlock RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = value;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(66/*interface_entry*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // extends_from ::= T_EXTENDS error 
            {
              TypeReference RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError(new ASTError(theErrorleft, theErrorright));

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(87/*extends_from*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // extends_from ::= T_EXTENDS fully_qualified_class_name 
            {
              TypeReference RESULT = null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = className;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(87/*extends_from*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // extends_from ::= 
            {
              TypeReference RESULT = null;
		
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(87/*extends_from*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // class_entry_type ::= T_FINAL T_CLASS 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccFinal, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(86/*class_entry_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // class_entry_type ::= T_ABSTRACT T_CLASS 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccAbstract, value);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(86/*class_entry_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // class_entry_type ::= T_CLASS 
            {
              Php5AstParser.ModifierDocPair RESULT = null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPDocBlock value = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = parser.new ModifierDocPair(Modifiers.AccDefault, value); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(86/*class_entry_type*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // class_closure ::= class_declaration_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(107/*class_closure*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // class_closure ::= unticked_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(107/*class_closure*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // class_closure ::= T_CURLY_CLOSE 
            {
              Statement RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(107/*class_closure*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // errorOrNot ::= 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(109/*errorOrNot*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // errorOrNot ::= error 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(109/*errorOrNot*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // unticked_class_declaration_statement ::= interface_entry T_STRING interface_extends_list NT$5 T_CURLY_OPEN class_statement_list class_closure 
            {
              Statement RESULT = null;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value != null )
                RESULT = (Statement) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int interfacesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int interfacesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List interfaces = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int blockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int blockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object blockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object statementList = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int blockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int blockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement blockEnd = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if(blockEnd != null) {
		parser.reportError(new ASTError(statementListright - 1, statementListright), "syntax error, unfinished class declaration");
		parser.pendingStatement = blockEnd;
	}

	InterfaceDeclaration interfaceDeclaration = (InterfaceDeclaration)parser.declarations.pop();
	interfaceDeclaration.setEnd(blockEndright);
	interfaceDeclaration.getBody().setStart(blockStartleft);
	interfaceDeclaration.getBody().setEnd(blockEndright);
	RESULT = interfaceDeclaration;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(85/*unticked_class_declaration_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // NT$5 ::= 
            {
              Object RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int interfacesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int interfacesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List interfaces = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	InterfaceDeclaration interfaceDeclaration = new InterfaceDeclaration(startleft ,interfacesright, classNameleft, classNameright, className, interfaces, new Block(interfacesright,interfacesright,null), start);
	parser.declarations.push(interfaceDeclaration);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(115/*NT$5*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // unticked_class_declaration_statement ::= class_entry_type T_STRING NT$3 extends_from errorOrNot implements_list NT$4 T_CURLY_OPEN class_statement_list class_closure 
            {
              Statement RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value != null )
                RESULT = (Statement) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value != null )
                RESULT = (Statement) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).value;
		int superClassleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int superClassright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		TypeReference superClass = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int interfacesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int interfacesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List interfaces = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int blockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int blockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object blockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object statementList = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int blockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int blockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement blockEnd = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if(blockEnd != null) {
		parser.reportError(new ASTError(statementListright - 1, statementListright), "syntax error, unfinished class declaration");
		parser.pendingStatement = blockEnd;
	}

	ClassDeclaration classDeclaration = (ClassDeclaration)parser.declarations.pop();
	classDeclaration.setEnd(blockEndright);
	classDeclaration.getBody().setStart(blockStartleft);
	classDeclaration.getBody().setEnd(blockEndright);
	RESULT = classDeclaration;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(85/*unticked_class_declaration_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // NT$4 ::= 
            {
              Object RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int superClassleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int superClassright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		TypeReference superClass = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int interfacesleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int interfacesright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List interfaces = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	ClassDeclaration classDeclaration = (ClassDeclaration)parser.declarations.peek();
	if (superClass != null) {
		classDeclaration.setSuperClass(superClass);
	}
	if (interfaces != null) {
		classDeclaration.setInterfaceList(interfaces);
	}
	classDeclaration.setEnd(interfacesright);
	classDeclaration.getBody().setStart(interfacesright);
	classDeclaration.getBody().setEnd(interfacesright);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(114/*NT$4*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$3 ::= 
            {
              Object RESULT = null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Php5AstParser.ModifierDocPair modifier = (Php5AstParser.ModifierDocPair)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	ClassDeclaration classDeclaration = new ClassDeclaration(modifierleft ,classNameright, classNameleft, classNameright, modifier.modifier, className, null, null, new Block(classNameright,classNameright,null), modifier.doc);
	parser.addDeclarationStatement(classDeclaration);
	parser.declarations.push(classDeclaration);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(113/*NT$3*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // function_body ::= error 
            {
              PHPMethodDeclaration RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = (PHPMethodDeclaration)parser.declarations.pop();

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(108/*function_body*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // function_body ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              PHPMethodDeclaration RESULT = null;
		int blockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int blockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object blockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int blockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int blockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object blockEnd = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPMethodDeclaration functionDeclaration = (PHPMethodDeclaration)parser.declarations.pop();
	Block block = functionDeclaration.getBody();
	block.setStart(blockStartleft);
	block.setEnd(blockEndright);
	block.getStatements().clear();
	block.acceptStatements(statementList);
	functionDeclaration.setEnd(blockEndright);
	RESULT = functionDeclaration;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(108/*function_body*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // unticked_function_declaration_statement ::= T_FUNCTION is_reference string_st NT$1 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$2 function_body 
            {
              PHPMethodDeclaration RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value != null )
                RESULT = (PHPMethodDeclaration) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value != null )
                RESULT = (PHPMethodDeclaration) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int paramListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int paramListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List paramList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int closeParentheseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int closeParentheseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object closeParenthese = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int bodyleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int bodyright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPMethodDeclaration body = (PHPMethodDeclaration)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
RESULT = body;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(84/*unticked_function_declaration_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$2 ::= 
            {
              Object RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int paramListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int paramListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List paramList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int closeParentheseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int closeParentheseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object closeParenthese = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	PHPMethodDeclaration functionDeclaration = (PHPMethodDeclaration)parser.declarations.peek();
	functionDeclaration.acceptArguments(paramList);
	functionDeclaration.setEnd(closeParentheseright);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(112/*NT$2*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // NT$1 ::= 
            {
              Object RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int isReferenceleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int isReferenceright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Boolean isReference = (Boolean)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	PHPMethodDeclaration functionDeclaration = new PHPMethodDeclaration(startleft, functionNameright, functionNameleft, functionNameright, functionName, Modifiers.AccDefault, null, new Block(functionNameright,functionNameright,null), isReference.booleanValue(), start);
	parser.addDeclarationStatement(functionDeclaration);
	parser.declarations.push(functionDeclaration);

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(111/*NT$1*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // is_reference ::= T_REFERENCE 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.TRUE;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(35/*is_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // is_reference ::= 
            {
              Boolean RESULT = null;
		
	RESULT = Boolean.FALSE;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(35/*is_reference*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // class_declaration_statement ::= unticked_class_declaration_statement 
            {
              Statement RESULT = null;
		int classDeclarationleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int classDeclarationright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement classDeclaration = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = classDeclaration;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(79/*class_declaration_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // function_declaration_statement ::= unticked_function_declaration_statement 
            {
              PHPMethodDeclaration RESULT = null;
		int functionDeclarationleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int functionDeclarationright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPMethodDeclaration functionDeclaration = (PHPMethodDeclaration)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = functionDeclaration;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(78/*function_declaration_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // use_filename ::= T_OPEN_PARENTHESE T_CONSTANT_ENCAPSED_STRING T_CLOSE_PARENTHESE 
            {
              Expression RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(startleft, endright, scalar, Scalar.TYPE_STRING);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(10/*use_filename*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // use_filename ::= T_CONSTANT_ENCAPSED_STRING 
            {
              Expression RESULT = null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Scalar s = new Scalar(scalarleft, scalarright, scalar, Scalar.TYPE_STRING);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(10/*use_filename*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // unset_variable ::= variable 
            {
              Expression RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = var;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(9/*unset_variable*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // unset_variables ::= unset_variables T_COMMA unset_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPCallArgumentsList list = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.addNode(var);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(8/*unset_variables*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // unset_variables ::= unset_variable 
            {
              PHPCallArgumentsList RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	list.addNode(var);
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(8/*unset_variables*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // additional_catch ::= T_CATCH T_OPEN_PARENTHESE fully_qualified_class_name T_VARIABLE T_CLOSE_PARENTHESE T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              CatchClause RESULT = null;
		int catch_wordleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int catch_wordright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Object catch_word = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int catchBlockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int catchBlockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object catchBlockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int catchListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int catchListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List catchList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int catchBlockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int catchBlockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object catchBlockEnd = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block catchBlock = new Block(catchBlockStartleft, catchBlockEndright, catchList);
	VariableReference variable = new VariableReference(varleft, varright, var, PHPVariableKind.LOCAL);
	CatchClause catchClause = new CatchClause(catch_wordleft, catchBlockEndright, className, variable, catchBlock);
	RESULT = catchClause;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(83/*additional_catch*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // non_empty_additional_catches ::= non_empty_additional_catches additional_catch 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int catch_statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int catch_statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		CatchClause catch_statement = (CatchClause)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	list.add(catch_statement);
	RESULT = list;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(82/*non_empty_additional_catches*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // non_empty_additional_catches ::= additional_catch 
            {
              List RESULT = null;
		int catch_statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int catch_statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		CatchClause catch_statement = (CatchClause)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	List list = new LinkedList();
	list.add(catch_statement);
	RESULT = list;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(82/*non_empty_additional_catches*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // additional_catches ::= 
            {
              List RESULT = null;
		
	List list = new LinkedList();
	RESULT = list;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(81/*additional_catches*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // additional_catches ::= non_empty_additional_catches 
            {
              List RESULT = null;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	RESULT = list;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(81/*additional_catches*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // unticked_statement ::= T_THROW expr T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ThrowStatement(tokenleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // unticked_statement ::= T_TRY T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE T_CATCH T_OPEN_PARENTHESE fully_qualified_class_name tracked_variable T_CLOSE_PARENTHESE T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE additional_catches 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-12)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-12)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-12)).value;
		int tryBlockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-11)).left;
		int tryBlockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-11)).right;
		Object tryBlockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-11)).value;
		int tryListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-10)).left;
		int tryListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-10)).right;
		List tryList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-10)).value;
		int tryBlockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left;
		int tryBlockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).right;
		Object tryBlockEnd = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).value;
		int catch_wordleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left;
		int catch_wordright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).right;
		Object catch_word = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		TypeReference className = (TypeReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		VariableReference var = (VariableReference)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int catchBlockStartleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int catchBlockStartright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object catchBlockStart = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int catchListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int catchListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List catchList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int catchBlockEndleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int catchBlockEndright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object catchBlockEnd = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int catchesListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int catchesListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		List catchesList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block tryBlock = new Block(tryBlockStartleft, tryBlockEndright, tryList);
	Block catchBlock = new Block(catchBlockStartleft, catchBlockEndright, catchList);
	CatchClause catchClause = new CatchClause(catch_wordleft, catchBlockEndright, className, var, catchBlock);
	((LinkedList) catchesList).addFirst(catchClause);
	TryStatement tryStatement = new TryStatement(startleft, catchesListright, tryBlock, catchesList);
	RESULT = tryStatement;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-12)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // unticked_statement ::= T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new EmptyStatement(tokenleft, tokenright); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // unticked_statement ::= T_DECLARE T_OPEN_PARENTHESE declare_list T_CLOSE_PARENTHESE declare_statement 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int listsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List[] lists = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	DeclareStatement declare = new DeclareStatement(startleft, statementright, lists[0], lists[1], statement);
	RESULT = declare;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE expr_without_variable T_AS variable foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int argleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int argright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression arg = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ForEachStatement forEachStatement = null;
	if (arg == null) {
		forEachStatement = new ForEachStatement(tokenleft, statementright, expr, var, statement);
	} else {
		forEachStatement = new ForEachStatement(tokenleft, statementright, expr, var, arg, statement);
	}
	RESULT = forEachStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE variable T_AS foreach_variable foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Expression var = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int argleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int argright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression arg = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	ForEachStatement forEachStatement = null;
	if (arg == null) {
		forEachStatement = new ForEachStatement(tokenleft, statementright, expr, var, statement);
	} else {
		forEachStatement = new ForEachStatement(tokenleft, statementright, expr, var, arg, statement);
	}
	RESULT = forEachStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // unticked_statement ::= T_UNSET T_OPEN_PARENTHESE unset_variables T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		String start = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPCallArgumentsList list = (PHPCallArgumentsList)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int closeParleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int closeParright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object closePar = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SimpleReference functionName = new SimpleReference(startleft, startright, "unset");
	PHPCallExpression functionInvocation = new PHPCallExpression(startleft, closeParright, null, functionName, list);
	ExpressionStatement expressionStatement = new ExpressionStatement(startleft, endright, functionInvocation);
	RESULT = expressionStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // unticked_statement ::= T_USE use_filename T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPCallArgumentsList list = new PHPCallArgumentsList();
	list.addNode(expr);
	SimpleReference functionName = new SimpleReference(startleft, startright, "use");
	PHPCallExpression functionInvocation = new PHPCallExpression(startleft, exprright, null, functionName, list);
	ExpressionStatement expressionStatement = new ExpressionStatement(startleft, endright, functionInvocation);
	RESULT = expressionStatement;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // unticked_statement ::= expr T_SEMICOLON 
            {
              Statement RESULT = null;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	ExpressionStatement expressionStatement = new ExpressionStatement(exprleft, endright, expr);
	RESULT = expressionStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // unticked_statement ::= T_INLINE_HTML 
            {
              Statement RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // unticked_statement ::= T_ECHO echo_expr_list T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List exprList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new EchoStatement(startleft, endright, exprList); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // unticked_statement ::= T_STATIC static_var_list T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		PHPDocBlock start = (PHPDocBlock)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	StaticStatement s = new StaticStatement(startleft, endright, list);
	RESULT = s;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // unticked_statement ::= T_GLOBAL global_var_list T_SEMICOLON 
            {
              Statement RESULT = null;
		int startleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int startright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object start = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int listleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List list = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	GlobalStatement  global = new GlobalStatement(startleft, endright, list);
	RESULT = global;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // unticked_statement ::= T_RETURN variable T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ReturnStatement(tokenleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // unticked_statement ::= T_RETURN expr_without_variable T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ReturnStatement(tokenleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // unticked_statement ::= T_RETURN T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ReturnStatement(tokenleft, endright); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // unticked_statement ::= T_CONTINUE expr T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ContinueStatement(tokenleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // unticked_statement ::= T_CONTINUE T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new ContinueStatement(tokenleft, endright); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // unticked_statement ::= T_BREAK expr T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new BreakStatement(tokenleft, endright, expr); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // unticked_statement ::= T_BREAK T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = new BreakStatement(tokenleft, endright); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // unticked_statement ::= T_SWITCH T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE switch_case_list 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int caseBlockleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int caseBlockright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Block caseBlock = (Block)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	SwitchStatement switchStatement = new SwitchStatement(tokenleft, caseBlockright, expr, caseBlock);
	RESULT = switchStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // unticked_statement ::= T_FOR T_OPEN_PARENTHESE for_expr T_SEMICOLON for_expr T_SEMICOLON for_expr T_CLOSE_PARENTHESE for_statement 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).value;
		int initializationsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int initializationsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		List initializations = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int conditionsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int conditionsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List conditions = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int increasementsleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int increasementsright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		List increasements = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
				
	ForStatement forStatement = new ForStatement(tokenleft, statementright, initializations, conditions, increasements, statement);			
	RESULT = forStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // unticked_statement ::= T_DO statement T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	DoStatement doStatement = new DoStatement(tokenleft, endright, expr, statement);			
	RESULT = doStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // unticked_statement ::= T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE while_statement 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int exprleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int exprright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Expression expr = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	WhileStatement whileStatement = new WhileStatement(tokenleft, statementright, expr, statement);			
	RESULT = whileStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list new_elseif_list new_else_single T_ENDIF T_SEMICOLON 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).value;
		int conditionleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).left;
		int conditionright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).right;
		Expression condition = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-7)).value;
		int colonleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).left;
		int colonright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).right;
		Object colon = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-5)).value;
		int ifTrueStatementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int ifTrueStatementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		List ifTrueStatementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int elseifleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int elseifright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		List[] elseif = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int iffalseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int iffalseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Statement iffalse = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression innerCondition = null;	
	Statement trueStatement = null;
	Statement falseStatement = iffalse;
		
	for (int i=0 ; i < elseif[0].size() ; i++) {
		innerCondition = (Expression)elseif[0].get(i);	
	 	trueStatement = (Statement)elseif[1].get(i);
	 	int start = ((Integer)elseif[2].get(i)).intValue();
		falseStatement = new IfStatement(start, iffalseright, innerCondition, trueStatement, falseStatement);
	}
	Block block = new Block(colonleft, ifTrueStatementListright, ifTrueStatementList);
	IfStatement ifStatement = new IfStatement(tokenleft, iffalseright, condition, block, falseStatement);		
	
	RESULT = ifStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-9)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement elseif_list else_single 
            {
              Statement RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).value;
		int conditionleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).left;
		int conditionright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).right;
		Expression condition = (Expression)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-4)).value;
		int iftrueleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).left;
		int iftrueright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).right;
		Statement iftrue = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int elseifleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int elseifright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List[] elseif = (List[])((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int iffalseleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int iffalseright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement iffalse = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Expression innerCondition = null;	
	Statement trueStatement = null;
	Statement falseStatement = iffalse;
		
	for (int i=0 ; i < elseif[0].size() ; i++) {
		innerCondition = (Expression)elseif[0].get(i);	
	 	trueStatement = (Statement)elseif[1].get(i);
	 	int start = ((Integer)elseif[2].get(i)).intValue();
		falseStatement = new IfStatement(start, iffalseright, innerCondition, trueStatement, falseStatement);
	}
	IfStatement ifStatement = new IfStatement(tokenleft, iffalseright, condition, iftrue, falseStatement);		
	
	RESULT = ifStatement;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // unticked_statement ::= T_CURLY_OPEN NT$0 inner_statement_list T_CURLY_CLOSE 
            {
              Statement RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value != null )
                RESULT = (Statement) ((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-2)).value;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int endleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int endright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object end = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	Block block = (Block)parser.declarations.pop();
	block.setEnd(endright);
	block.getStatements().clear();
	block.acceptStatements(statementList);
	
	RESULT = block;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(7/*unticked_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$0 ::= 
            {
              Object RESULT = null;
		int tokenleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int tokenright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object token = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;

	Block block = new Block(tokenleft, tokenleft, new LinkedList());
	parser.declarations.push(block);
	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(110/*NT$0*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // statement ::= error 
            {
              Statement RESULT = null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	parser.reportError();
	ASTError error = new ASTError(theErrorleft, theErrorright);
	RESULT = error;	

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(4/*statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // statement ::= T_VAR_COMMENT 
            {
              Statement RESULT = null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// TODO: var comment should be added as ast node

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(4/*statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // statement ::= unticked_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(4/*statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // inner_statement ::= T_HALT_COMPILER T_OPEN_PARENTHESE T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Statement RESULT = null;
		int haltleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left;
		int haltright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).right;
		Object halt = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).value;
		int closeleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int closeright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object close = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		 
	// Note: we never generate K_HALT_COMPILER
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(6/*inner_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // inner_statement ::= class_declaration_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(6/*inner_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // inner_statement ::= function_declaration_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPMethodDeclaration statement = (PHPMethodDeclaration)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(6/*inner_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // inner_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(6/*inner_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // inner_statement_list ::= 
            {
              List RESULT = null;
		 
	RESULT = new LinkedList(); 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(5/*inner_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // inner_statement_list ::= inner_statement_list inner_statement 
            {
              List RESULT = null;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		List statementList = (List)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	// Ignore null statements
	if(statement != null) {
		statementList.add(statement);
		if(statement.getKind() == ASTNodeKinds.AST_ERROR){
			if(!parser.declarations.isEmpty()) {
				Statement node = parser.declarations.peek();
				if(node.sourceStart() == statement.sourceStart() && node.sourceEnd() == statement.sourceEnd()) {
					statementList.add(parser.declarations.pop());
				}
			}		
		}
	}
	RESULT = statementList;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(5/*inner_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // top_statement ::= T_HALT_COMPILER T_OPEN_PARENTHESE T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object statement = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	// Note: we never generate T_HALT_COMPILER
	RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(3/*top_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // top_statement ::= class_declaration_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(3/*top_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // top_statement ::= function_declaration_statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		PHPMethodDeclaration statement = (PHPMethodDeclaration)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(3/*top_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // top_statement ::= statement 
            {
              Statement RESULT = null;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		 
	RESULT = statement; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(3/*top_statement*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // top_statement_list ::= 
            {
              Object RESULT = null;

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(2/*top_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // top_statement_list ::= top_statement_list top_statement 
            {
              Object RESULT = null;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		Object statementList = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		int statementleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Statement statement = (Statement)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	if(statement != null) {
		parser.addStatement(statement);
		if(parser.pendingStatement != null){
			parser.addStatement(parser.pendingStatement);
			parser.pendingStatement = null;
		}
	}
	while(!parser.declarations.isEmpty() ) {
		parser.getModuleDeclaration().addStatement(parser.declarations.pop());
	}		

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(2/*top_statement_list*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= thestart EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).right;
		ModuleDeclaration start_val = (ModuleDeclaration)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).value;
		RESULT = start_val;
              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$Php5AstParser$parser.done_parsing();
          return CUP$Php5AstParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // thestart ::= top_statement_list 
            {
              ModuleDeclaration RESULT = null;
		int statementListleft = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left;
		int statementListright = ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right;
		Object statementList = (Object)((java_cup.runtime.Symbol) CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).value;
		
	PHPModuleDeclaration program = parser.getModuleDeclaration();
	program.setStart(statementListleft);
	program.setEnd(statementListright);
	RESULT = program; 

              CUP$Php5AstParser$result = new java_cup.runtime.Symbol(1/*thestart*/, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$Php5AstParser$stack.elementAt(CUP$Php5AstParser$top-0)).right, RESULT);
            }
          return CUP$Php5AstParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

